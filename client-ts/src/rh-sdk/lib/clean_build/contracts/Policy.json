{
  "contractName": "Policy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ITreasury",
          "name": "treasury",
          "type": "address"
        },
        {
          "internalType": "contract IPriceProducer",
          "name": "priceFetcher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "succees",
          "type": "bool"
        }
      ],
      "name": "PolicyClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coverAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "externalCode",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "coverAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "externalCode",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "internalType": "struct IPolicy.PolicyData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "mintPolicy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "currentPrice",
          "type": "uint256"
        }
      ],
      "name": "onPriceResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        }
      ],
      "name": "burnExpiredPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"contract IPriceProducer\",\"name\":\"priceFetcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"succees\",\"type\":\"bool\"}],\"name\":\"PolicyClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"burnExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"externalCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IPolicy.PolicyData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"mintPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"}],\"name\":\"onPriceResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"externalCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Policy.sol\":\"Policy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Policy.sol\":{\"keccak256\":\"0x8f3a932f7d328c7056540f8aa73b637fec44596c0c9b2f50fdad52b6a285c565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce379c5308b5cab2d6695ce822b9bfd8b27c9d3158c62fdacb315c7fb17c3c1e\",\"dweb:/ipfs/QmP5CtY1Zkniv4k5xosZrRM6RzWzyxNtSoMyuj32zmTeZn\"]},\"/interfaces/IPolicy.sol\":{\"keccak256\":\"0x133317c8619572a94baaf5bae606acfd2575597e991915c0cd6aef11b7428d57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c91349959cd5cde906758db7a349a4dc715a8d8c58a2559a0fe7e53c1f5802\",\"dweb:/ipfs/QmUkHcqVB3eFWXtiTmzKZ6fU5s8Z61hhkWrqPdPS7i5ZbP\"]},\"/interfaces/IPriceConsumer.sol\":{\"keccak256\":\"0xeb8c43516894c371278896544a5c17b09f1414abbec9da9df39b6be4d25d9c6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93d328d017e71d2a3b65e839401108346b6ec6fdd99db183ecfd150d3554ae5c\",\"dweb:/ipfs/QmW5zqwNVw5F4i57nLydV2VmD44APrVRvBW3NnX8r6oQeY\"]},\"/interfaces/IPriceProducer.sol\":{\"keccak256\":\"0x102c4fe004f2e39f3174414bca6628e851ec257681cd45676e547beed15eeee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66eaf82d90852def88db4c9c4b64c9b23777f2fd38f0b2b7749c510b934089b6\",\"dweb:/ipfs/QmcC9KvvyEmG8e6G646tSTJu64CsAWm42FS3cwiAF9HzHC\"]},\"/interfaces/ITreasury.sol\":{\"keccak256\":\"0x71dba43dfbc2352747a1d80d135d9b8d73294f2356f685fc79414c0a4fb63449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eea96c35dc0e2a3b02d76d940c2687225305e938adce356a5921e6c4dec9d18d\",\"dweb:/ipfs/QmbVoVKPTmvdKurumHjd6VYwKjkG8AgAcuBd3ZGmzgfFKX\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xfc398838759c3248bdca40f7bc060e789c8d715df22f9eee7494bcafe14fa1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2e28a5681be0558b2de6a24c107299925f8bd9e3244e9a70b033d6eab782c8\",\"dweb:/ipfs/QmX5kRT4Gwq4GQYfEdxVsE7PALpGfQEuQJhsfpCap9inKm\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xaf936da92f3a9a4f98b237323b5eb1d813fb86c4d07a184beba7027cf0509ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaa210e132e06975eb9f20060db6ba7dee78f6fce691a1c2489525584de521c0\",\"dweb:/ipfs/QmRwzi4nUW3UWBwhY5ik2xW3JZo9NMLN5UyGi1xPpMQYrh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f\",\"dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127\",\"dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694\",\"dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x2d68b8e6425249cd05cc0a66ea50cb5b8d10cbdac59c6de834e1002232813faf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ce6b6ac17c67bba01e9c8c778f82f68fd4823bd083359cdd03040b70eeeba3\",\"dweb:/ipfs/QmX4t1jWwKaAkacvmQxEG5rBtLXg3EHw6pRjKhMZR8iw3n\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e\",\"dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969\",\"dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620045de380380620045de833981810160405281019062000037919062000425565b6040518060400160405280600681526020017f506f6c69637900000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f5245504c430000000000000000000000000000000000000000000000000000008152506000620000b56200027160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200016b6301ffc9a760e01b6200027960201b60201c565b81600790805190602001906200018392919062000351565b5080600890805190602001906200019c92919062000351565b50620001b56380ac58cd60e01b6200027960201b60201c565b620001cd635b5e139f60e01b6200027960201b60201c565b620001e563780e9d6360e01b6200027960201b60201c565b505081600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200056b565b600033905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002e5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002dc90620004a8565b60405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200039457805160ff1916838001178555620003c5565b82800160010185558215620003c5579182015b82811115620003c4578251825591602001919060010190620003a7565b5b509050620003d49190620003d8565b5090565b5b80821115620003f3576000816000905550600101620003d9565b5090565b600081519050620004088162000537565b92915050565b6000815190506200041f8162000551565b92915050565b600080604083850312156200043957600080fd5b600062000449858286016200040e565b92505060206200045c85828601620003f7565b9150509250929050565b600062000475601c83620004ca565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620004c38162000466565b9050919050565b600082825260208201905092915050565b6000620004e88262000517565b9050919050565b6000620004fc82620004db565b9050919050565b60006200051082620004db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200054281620004ef565b81146200054e57600080fd5b50565b6200055c8162000503565b81146200056857600080fd5b50565b614063806200057b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636c0360eb116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610448578063d3e8948314610478578063e985e9c5146104ad578063f2fde38b146104dd57610173565b8063a22cb465146103f4578063b88d4fde14610410578063c1c1f85a1461042c57610173565b80636c0360eb1461033057806370a082311461034e578063715018a61461037e5780638d501cc8146103885780638da5cb5b146103b857806395d89b41146103d657610173565b80632f745c59116101305780632f745c591461024c578063379607f51461027c57806342842e0e146102985780634f6ccce7146102b457806360fe02f9146102e45780636352211e1461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360381019061018d9190612fa8565b6104f9565b60405161019f91906139e0565b60405180910390f35b6101b0610561565b6040516101bd91906139fb565b60405180910390f35b6101e060048036038101906101db9190612ffa565b610603565b6040516101ed9190613979565b60405180910390f35b610210600480360381019061020b9190612f07565b610688565b005b61021a6107a0565b6040516102279190613cbf565b60405180910390f35b61024a60048036038101906102459190612dad565b6107b1565b005b61026660048036038101906102619190612f07565b610811565b6040516102739190613cbf565b60405180910390f35b61029660048036038101906102919190612ffa565b61086c565b005b6102b260048036038101906102ad9190612dad565b6109c0565b005b6102ce60048036038101906102c99190612ffa565b6109e0565b6040516102db9190613cbf565b60405180910390f35b6102fe60048036038101906102f99190612ffa565b610a03565b005b61031a60048036038101906103159190612ffa565b610ab8565b6040516103279190613979565b60405180910390f35b610338610aef565b60405161034591906139fb565b60405180910390f35b61036860048036038101906103639190612d48565b610b91565b6040516103759190613cbf565b60405180910390f35b610386610c50565b005b6103a2600480360381019061039d9190612eb3565b610da3565b6040516103af9190613cbf565b60405180910390f35b6103c0610ee6565b6040516103cd9190613979565b60405180910390f35b6103de610f0f565b6040516103eb91906139fb565b60405180910390f35b61040e60048036038101906104099190612e77565b610fb1565b005b61042a60048036038101906104259190612dfc565b611132565b005b61044660048036038101906104419190612f6c565b611194565b005b610462600480360381019061045d9190612ffa565b6113d1565b60405161046f91906139fb565b60405180910390f35b610492600480360381019061048d9190612ffa565b61155c565b6040516104a496959493929190613d2c565b60405180910390f35b6104c760048036038101906104c29190612d71565b61163d565b6040516104d491906139e0565b60405180910390f35b6104f760048036038101906104f29190612d48565b6116d1565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b5050505050905090565b600061060e82611893565b61064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490613b9f565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061069382610ab8565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb90613c3f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107236118b0565b73ffffffffffffffffffffffffffffffffffffffff16148061075257506107518161074c6118b0565b61163d565b5b610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890613b1f565b60405180910390fd5b61079b83836118b8565b505050565b60006107ac6003611971565b905090565b6107c26107bc6118b0565b82611986565b610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890613c5f565b60405180910390fd5b61080c838383611a64565b505050565b600061086482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c7b90919063ffffffff16565b905092915050565b6000600e600083815260200190815260200160002090508060050160009054906101000a900460ff166108d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cb90613c1f565b60405180910390fd5b42816002015410156108ee576108e982611c95565b6109bc565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4fe6bd0836003016040518263ffffffff1660e01b815260040161094e9190613a1d565b602060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190612f43565b905082600f600083815260200190815260200160002081905550505b5050565b6109db83838360405180602001604052806000815250611132565b505050565b6000806109f7836003611cfb90919063ffffffff16565b50905080915050919050565b6000600e60008381526020019081526020016000209050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d68282f82600101546040518263ffffffff1660e01b8152600401610a799190613cbf565b600060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b50505050610ab482611c95565b5050565b6000610ae882604051806060016040528060298152602001614005602991396003611d279092919063ffffffff16565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990613b3f565b60405180910390fd5b610c49600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d46565b9050919050565b610c586118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ce5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc90613bbf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610dad6118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3190613bbf565b60405180910390fd5b610e44600b611d5b565b9050610e508382611d69565b610e5a600b611ef7565b8082600001818152505081600e60008381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190610eb2929190612a74565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555090505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa75780601f10610f7c57610100808354040283529160200191610fa7565b820191906000526020600020905b815481529060010190602001808311610f8a57829003601f168201915b5050505050905090565b610fb96118b0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611027576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101e90613adf565b60405180910390fd5b80600660006110346118b0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166110e16118b0565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161112691906139e0565b60405180910390a35050565b61114361113d6118b0565b83611986565b611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990613c5f565b60405180910390fd5b61118e84848484611f0d565b50505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121b90613c9f565b60405180910390fd5b6000600f60008481526020019081526020016000205490506000600e60008381526020019081526020016000209050600061125e83610ab8565b90508160050160009054906101000a900460ff1680156112815750816004015484105b1561137857600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bcc428360010154836040518363ffffffff1660e01b81526004016112e7929190613cda565b600060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b5050505061132283611c95565b8073ffffffffffffffffffffffffffffffffffffffff167f9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d84600160405161136b929190613d03565b60405180910390a26113ca565b8073ffffffffffffffffffffffffffffffffffffffff167f9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d8460006040516113c1929190613d03565b60405180910390a25b5050505050565b60606113dc82611893565b61141b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141290613bff565b60405180910390fd5b6060600960008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c45780601f10611499576101008083540402835291602001916114c4565b820191906000526020600020905b8154815290600101906020018083116114a757829003601f168201915b505050505090506000600a80546001816001161561010002031660029004905014156114f35780915050611557565b60008151111561152857600a81604051602001611511929190613955565b604051602081830303815290604052915050611557565b600a61153384611f69565b604051602001611544929190613955565b6040516020818303038152906040529150505b919050565b600e602052806000526040600020600091509050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561161a5780601f106115ef5761010080835404028352916020019161161a565b820191906000526020600020905b8154815290600101906020018083116115fd57829003601f168201915b5050505050908060040154908060050160009054906101000a900460ff16905086565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116d96118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175d90613bbf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90613a7f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006118a98260036120b090919063ffffffff16565b9050919050565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661192b83610ab8565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061197f826000016120ca565b9050919050565b600061199182611893565b6119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790613aff565b60405180910390fd5b60006119db83610ab8565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a4a57508373ffffffffffffffffffffffffffffffffffffffff16611a3284610603565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a5b5750611a5a818561163d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a8482610ab8565b73ffffffffffffffffffffffffffffffffffffffff1614611ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad190613bdf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4190613abf565b60405180910390fd5b611b558383836120db565b611b606000826118b8565b611bb181600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b50611c0381600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611c1a818360036121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c8a8360000183612149565b60001c905092915050565b611c9e816121b6565b600e600082815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000611cda9190612af4565b60048201600090556005820160006101000a81549060ff0219169055505050565b600080600080611d0e86600001866122f0565b915091508160001c8160001c9350935050509250929050565b6000611d3a846000018460001b84612373565b60001c90509392505050565b6000611d5482600001612404565b9050919050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd090613b7f565b60405180910390fd5b611de281611893565b15611e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1990613a9f565b60405180910390fd5b611e2e600083836120db565b611e7f81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611e96818360036121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611f18848484611a64565b611f2484848484612415565b611f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5a90613a5f565b60405180910390fd5b50505050565b60606000821415611fb1576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506120ab565b600082905060005b60008214611fdb578080600101915050600a8281611fd357fe5b049150611fb9565b60608167ffffffffffffffff81118015611ff457600080fd5b506040519080825280601f01601f1916602001820160405280156120275781602001600182028036833780820191505090505b50905060006001830390508593505b600084146120a357600a848161204857fe5b0660300160f81b8282806001900393508151811061206257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161209b57fe5b049350612036565b819450505050505b919050565b60006120c2836000018360001b612579565b905092915050565b600081600001805490509050919050565b505050565b60006120f2836000018360001b61259c565b905092915050565b600061210c836000018360001b612684565b905092915050565b6000612140846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6126f4565b90509392505050565b600081836000018054905011612194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218b90613a3f565b60405180910390fd5b8260000182815481106121a357fe5b9060005260206000200154905092915050565b60006121c182610ab8565b90506121cf816000846120db565b6121da6000836118b8565b60006009600084815260200190815260200160002080546001816001161561010002031660029004905014612229576009600083815260200190815260200160002060006122289190612af4565b5b61227a82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b5061228f8260036127d090919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000808284600001805490501161233c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233390613b5f565b60405180910390fd5b600084600001848154811061234d57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cc91906139fb565b60405180910390fd5b508460000160018203815481106123e857fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006124368473ffffffffffffffffffffffffffffffffffffffff166127ea565b6124435760019050612571565b606061250a63150b7a0260e01b6124586118b0565b88878760405160240161246e9493929190613994565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613fd3603291398773ffffffffffffffffffffffffffffffffffffffff166127fd9092919063ffffffff16565b90506000818060200190518101906125229190612fd1565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461267857600060018203905060006001866000018054905003905060008660000182815481106125e757fe5b906000526020600020015490508087600001848154811061260457fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061263c57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061267e565b60009150505b92915050565b60006126908383612815565b6126e95782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506126ee565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561279b578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506127c9565b828560000160018303815481106127ae57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60006127e2836000018360001b612838565b905092915050565b600080823b905060008111915050919050565b606061280c8484600085612951565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612945576000600182039050600060018660000180549050039050600086600001828154811061288357fe5b90600052602060002090600202019050808760000184815481106128a357fe5b90600052602060002090600202016000820154816000015560018201548160010155905050600183018760010160008360000154815260200190815260200160002081905550866000018054806128f657fe5b600190038181906000526020600020906002020160008082016000905560018201600090555050905586600101600087815260200190815260200160002060009055600194505050505061294b565b60009150505b92915050565b606061295c856127ea565b61299b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299290613c7f565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516129c5919061393e565b60006040518083038185875af1925050503d8060008114612a02576040519150601f19603f3d011682016040523d82523d6000602084013e612a07565b606091505b50915091508115612a1c578092505050612a6c565b600081511115612a2f5780518082602001fd5b836040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a6391906139fb565b60405180910390fd5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ab557805160ff1916838001178555612ae3565b82800160010185558215612ae3579182015b82811115612ae2578251825591602001919060010190612ac7565b5b509050612af09190612b3c565b5090565b50805460018160011615610100020316600290046000825580601f10612b1a5750612b39565b601f016020900490600052602060002090810190612b389190612b3c565b5b50565b5b80821115612b55576000816000905550600101612b3d565b5090565b600081359050612b6881613f5f565b92915050565b600081359050612b7d81613f76565b92915050565b600081359050612b9281613f8d565b92915050565b600081519050612ba781613f8d565b92915050565b600081359050612bbc81613fa4565b92915050565b600081519050612bd181613fa4565b92915050565b600082601f830112612be857600080fd5b8135612bfb612bf682613dc1565b613d94565b91508082526020830160208301858383011115612c1757600080fd5b612c22838284613f0c565b50505092915050565b600082601f830112612c3c57600080fd5b8135612c4f612c4a82613ded565b613d94565b91508082526020830160208301858383011115612c6b57600080fd5b612c76838284613f0c565b50505092915050565b600060c08284031215612c9157600080fd5b612c9b60c0613d94565b90506000612cab84828501612d33565b6000830152506020612cbf84828501612d33565b6020830152506040612cd384828501612d33565b604083015250606082013567ffffffffffffffff811115612cf357600080fd5b612cff84828501612c2b565b6060830152506080612d1384828501612d33565b60808301525060a0612d2784828501612b6e565b60a08301525092915050565b600081359050612d4281613fbb565b92915050565b600060208284031215612d5a57600080fd5b6000612d6884828501612b59565b91505092915050565b60008060408385031215612d8457600080fd5b6000612d9285828601612b59565b9250506020612da385828601612b59565b9150509250929050565b600080600060608486031215612dc257600080fd5b6000612dd086828701612b59565b9350506020612de186828701612b59565b9250506040612df286828701612d33565b9150509250925092565b60008060008060808587031215612e1257600080fd5b6000612e2087828801612b59565b9450506020612e3187828801612b59565b9350506040612e4287828801612d33565b925050606085013567ffffffffffffffff811115612e5f57600080fd5b612e6b87828801612bd7565b91505092959194509250565b60008060408385031215612e8a57600080fd5b6000612e9885828601612b59565b9250506020612ea985828601612b6e565b9150509250929050565b60008060408385031215612ec657600080fd5b6000612ed485828601612b59565b925050602083013567ffffffffffffffff811115612ef157600080fd5b612efd85828601612c7f565b9150509250929050565b60008060408385031215612f1a57600080fd5b6000612f2885828601612b59565b9250506020612f3985828601612d33565b9150509250929050565b600060208284031215612f5557600080fd5b6000612f6384828501612b98565b91505092915050565b60008060408385031215612f7f57600080fd5b6000612f8d85828601612b83565b9250506020612f9e85828601612d33565b9150509250929050565b600060208284031215612fba57600080fd5b6000612fc884828501612bad565b91505092915050565b600060208284031215612fe357600080fd5b6000612ff184828501612bc2565b91505092915050565b60006020828403121561300c57600080fd5b600061301a84828501612d33565b91505092915050565b61302c81613e8e565b82525050565b61303b81613e7c565b82525050565b61304a81613ea0565b82525050565b600061305b82613e2e565b6130658185613e44565b9350613075818560208601613f1b565b61307e81613f4e565b840191505092915050565b600061309482613e2e565b61309e8185613e55565b93506130ae818560208601613f1b565b80840191505092915050565b60006130c582613e39565b6130cf8185613e60565b93506130df818560208601613f1b565b6130e881613f4e565b840191505092915050565b60006130fe82613e39565b6131088185613e71565b9350613118818560208601613f1b565b80840191505092915050565b6000815460018116600081146131415760018114613167576131ab565b607f60028304166131528187613e60565b955060ff1983168652602086019350506131ab565b600282046131758187613e60565b955061318085613e19565b60005b828110156131a257815481890152600182019150602081019050613183565b80880195505050505b505092915050565b6000815460018116600081146131d057600181146131f557613239565b607f60028304166131e18187613e71565b955060ff1983168652808601935050613239565b600282046132038187613e71565b955061320e85613e19565b60005b8281101561323057815481890152600182019150602081019050613211565b82880195505050505b505092915050565b600061324e602283613e60565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132b4603283613e60565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061331a602683613e60565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613380601c83613e60565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006133c0602483613e60565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613426601983613e60565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613466602c83613e60565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006134cc603883613e60565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613532602a83613e60565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613598602283613e60565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135fe602083613e60565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061363e602c83613e60565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006136a4602083613e60565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006136e4602983613e60565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061374a602f83613e60565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006137b0601983613e60565b91507f54686520706f6c696379206d75737420626520616374697665000000000000006000830152602082019050919050565b60006137f0602183613e60565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613856603183613e60565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006138bc601d83613e60565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006138fc600d83613e60565b91507f4163636573732064656e696564000000000000000000000000000000000000006000830152602082019050919050565b61393881613f02565b82525050565b600061394a8284613089565b915081905092915050565b600061396182856131b3565b915061396d82846130f3565b91508190509392505050565b600060208201905061398e6000830184613032565b92915050565b60006080820190506139a96000830187613023565b6139b66020830186613032565b6139c3604083018561392f565b81810360608301526139d58184613050565b905095945050505050565b60006020820190506139f56000830184613041565b92915050565b60006020820190508181036000830152613a1581846130ba565b905092915050565b60006020820190508181036000830152613a378184613124565b905092915050565b60006020820190508181036000830152613a5881613241565b9050919050565b60006020820190508181036000830152613a78816132a7565b9050919050565b60006020820190508181036000830152613a988161330d565b9050919050565b60006020820190508181036000830152613ab881613373565b9050919050565b60006020820190508181036000830152613ad8816133b3565b9050919050565b60006020820190508181036000830152613af881613419565b9050919050565b60006020820190508181036000830152613b1881613459565b9050919050565b60006020820190508181036000830152613b38816134bf565b9050919050565b60006020820190508181036000830152613b5881613525565b9050919050565b60006020820190508181036000830152613b788161358b565b9050919050565b60006020820190508181036000830152613b98816135f1565b9050919050565b60006020820190508181036000830152613bb881613631565b9050919050565b60006020820190508181036000830152613bd881613697565b9050919050565b60006020820190508181036000830152613bf8816136d7565b9050919050565b60006020820190508181036000830152613c188161373d565b9050919050565b60006020820190508181036000830152613c38816137a3565b9050919050565b60006020820190508181036000830152613c58816137e3565b9050919050565b60006020820190508181036000830152613c7881613849565b9050919050565b60006020820190508181036000830152613c98816138af565b9050919050565b60006020820190508181036000830152613cb8816138ef565b9050919050565b6000602082019050613cd4600083018461392f565b92915050565b6000604082019050613cef600083018561392f565b613cfc6020830184613032565b9392505050565b6000604082019050613d18600083018561392f565b613d256020830184613041565b9392505050565b600060c082019050613d41600083018961392f565b613d4e602083018861392f565b613d5b604083018761392f565b8181036060830152613d6d81866130ba565b9050613d7c608083018561392f565b613d8960a0830184613041565b979650505050505050565b6000604051905081810181811067ffffffffffffffff82111715613db757600080fd5b8060405250919050565b600067ffffffffffffffff821115613dd857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613e0457600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613e8782613ee2565b9050919050565b6000613e9982613ee2565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613f39578082015181840152602081019050613f1e565b83811115613f48576000848401525b50505050565b6000601f19601f8301169050919050565b613f6881613e7c565b8114613f7357600080fd5b50565b613f7f81613ea0565b8114613f8a57600080fd5b50565b613f9681613eac565b8114613fa157600080fd5b50565b613fad81613eb6565b8114613fb857600080fd5b50565b613fc481613f02565b8114613fcf57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220f38716e713fae031010e6601d9a446904fd566c0786b83e7be8ea52a49804fa664736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636c0360eb116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610448578063d3e8948314610478578063e985e9c5146104ad578063f2fde38b146104dd57610173565b8063a22cb465146103f4578063b88d4fde14610410578063c1c1f85a1461042c57610173565b80636c0360eb1461033057806370a082311461034e578063715018a61461037e5780638d501cc8146103885780638da5cb5b146103b857806395d89b41146103d657610173565b80632f745c59116101305780632f745c591461024c578063379607f51461027c57806342842e0e146102985780634f6ccce7146102b457806360fe02f9146102e45780636352211e1461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360381019061018d9190612fa8565b6104f9565b60405161019f91906139e0565b60405180910390f35b6101b0610561565b6040516101bd91906139fb565b60405180910390f35b6101e060048036038101906101db9190612ffa565b610603565b6040516101ed9190613979565b60405180910390f35b610210600480360381019061020b9190612f07565b610688565b005b61021a6107a0565b6040516102279190613cbf565b60405180910390f35b61024a60048036038101906102459190612dad565b6107b1565b005b61026660048036038101906102619190612f07565b610811565b6040516102739190613cbf565b60405180910390f35b61029660048036038101906102919190612ffa565b61086c565b005b6102b260048036038101906102ad9190612dad565b6109c0565b005b6102ce60048036038101906102c99190612ffa565b6109e0565b6040516102db9190613cbf565b60405180910390f35b6102fe60048036038101906102f99190612ffa565b610a03565b005b61031a60048036038101906103159190612ffa565b610ab8565b6040516103279190613979565b60405180910390f35b610338610aef565b60405161034591906139fb565b60405180910390f35b61036860048036038101906103639190612d48565b610b91565b6040516103759190613cbf565b60405180910390f35b610386610c50565b005b6103a2600480360381019061039d9190612eb3565b610da3565b6040516103af9190613cbf565b60405180910390f35b6103c0610ee6565b6040516103cd9190613979565b60405180910390f35b6103de610f0f565b6040516103eb91906139fb565b60405180910390f35b61040e60048036038101906104099190612e77565b610fb1565b005b61042a60048036038101906104259190612dfc565b611132565b005b61044660048036038101906104419190612f6c565b611194565b005b610462600480360381019061045d9190612ffa565b6113d1565b60405161046f91906139fb565b60405180910390f35b610492600480360381019061048d9190612ffa565b61155c565b6040516104a496959493929190613d2c565b60405180910390f35b6104c760048036038101906104c29190612d71565b61163d565b6040516104d491906139e0565b60405180910390f35b6104f760048036038101906104f29190612d48565b6116d1565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b5050505050905090565b600061060e82611893565b61064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490613b9f565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061069382610ab8565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb90613c3f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107236118b0565b73ffffffffffffffffffffffffffffffffffffffff16148061075257506107518161074c6118b0565b61163d565b5b610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890613b1f565b60405180910390fd5b61079b83836118b8565b505050565b60006107ac6003611971565b905090565b6107c26107bc6118b0565b82611986565b610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890613c5f565b60405180910390fd5b61080c838383611a64565b505050565b600061086482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c7b90919063ffffffff16565b905092915050565b6000600e600083815260200190815260200160002090508060050160009054906101000a900460ff166108d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cb90613c1f565b60405180910390fd5b42816002015410156108ee576108e982611c95565b6109bc565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4fe6bd0836003016040518263ffffffff1660e01b815260040161094e9190613a1d565b602060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190612f43565b905082600f600083815260200190815260200160002081905550505b5050565b6109db83838360405180602001604052806000815250611132565b505050565b6000806109f7836003611cfb90919063ffffffff16565b50905080915050919050565b6000600e60008381526020019081526020016000209050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d68282f82600101546040518263ffffffff1660e01b8152600401610a799190613cbf565b600060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b50505050610ab482611c95565b5050565b6000610ae882604051806060016040528060298152602001614005602991396003611d279092919063ffffffff16565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990613b3f565b60405180910390fd5b610c49600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d46565b9050919050565b610c586118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ce5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc90613bbf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610dad6118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3190613bbf565b60405180910390fd5b610e44600b611d5b565b9050610e508382611d69565b610e5a600b611ef7565b8082600001818152505081600e60008381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190610eb2929190612a74565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555090505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa75780601f10610f7c57610100808354040283529160200191610fa7565b820191906000526020600020905b815481529060010190602001808311610f8a57829003601f168201915b5050505050905090565b610fb96118b0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611027576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101e90613adf565b60405180910390fd5b80600660006110346118b0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166110e16118b0565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161112691906139e0565b60405180910390a35050565b61114361113d6118b0565b83611986565b611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990613c5f565b60405180910390fd5b61118e84848484611f0d565b50505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121b90613c9f565b60405180910390fd5b6000600f60008481526020019081526020016000205490506000600e60008381526020019081526020016000209050600061125e83610ab8565b90508160050160009054906101000a900460ff1680156112815750816004015484105b1561137857600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bcc428360010154836040518363ffffffff1660e01b81526004016112e7929190613cda565b600060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b5050505061132283611c95565b8073ffffffffffffffffffffffffffffffffffffffff167f9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d84600160405161136b929190613d03565b60405180910390a26113ca565b8073ffffffffffffffffffffffffffffffffffffffff167f9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d8460006040516113c1929190613d03565b60405180910390a25b5050505050565b60606113dc82611893565b61141b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141290613bff565b60405180910390fd5b6060600960008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c45780601f10611499576101008083540402835291602001916114c4565b820191906000526020600020905b8154815290600101906020018083116114a757829003601f168201915b505050505090506000600a80546001816001161561010002031660029004905014156114f35780915050611557565b60008151111561152857600a81604051602001611511929190613955565b604051602081830303815290604052915050611557565b600a61153384611f69565b604051602001611544929190613955565b6040516020818303038152906040529150505b919050565b600e602052806000526040600020600091509050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561161a5780601f106115ef5761010080835404028352916020019161161a565b820191906000526020600020905b8154815290600101906020018083116115fd57829003601f168201915b5050505050908060040154908060050160009054906101000a900460ff16905086565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116d96118b0565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175d90613bbf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90613a7f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006118a98260036120b090919063ffffffff16565b9050919050565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661192b83610ab8565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061197f826000016120ca565b9050919050565b600061199182611893565b6119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790613aff565b60405180910390fd5b60006119db83610ab8565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a4a57508373ffffffffffffffffffffffffffffffffffffffff16611a3284610603565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a5b5750611a5a818561163d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a8482610ab8565b73ffffffffffffffffffffffffffffffffffffffff1614611ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad190613bdf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4190613abf565b60405180910390fd5b611b558383836120db565b611b606000826118b8565b611bb181600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b50611c0381600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611c1a818360036121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c8a8360000183612149565b60001c905092915050565b611c9e816121b6565b600e600082815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000611cda9190612af4565b60048201600090556005820160006101000a81549060ff0219169055505050565b600080600080611d0e86600001866122f0565b915091508160001c8160001c9350935050509250929050565b6000611d3a846000018460001b84612373565b60001c90509392505050565b6000611d5482600001612404565b9050919050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd090613b7f565b60405180910390fd5b611de281611893565b15611e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1990613a9f565b60405180910390fd5b611e2e600083836120db565b611e7f81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611e96818360036121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611f18848484611a64565b611f2484848484612415565b611f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5a90613a5f565b60405180910390fd5b50505050565b60606000821415611fb1576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506120ab565b600082905060005b60008214611fdb578080600101915050600a8281611fd357fe5b049150611fb9565b60608167ffffffffffffffff81118015611ff457600080fd5b506040519080825280601f01601f1916602001820160405280156120275781602001600182028036833780820191505090505b50905060006001830390508593505b600084146120a357600a848161204857fe5b0660300160f81b8282806001900393508151811061206257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161209b57fe5b049350612036565b819450505050505b919050565b60006120c2836000018360001b612579565b905092915050565b600081600001805490509050919050565b505050565b60006120f2836000018360001b61259c565b905092915050565b600061210c836000018360001b612684565b905092915050565b6000612140846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6126f4565b90509392505050565b600081836000018054905011612194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218b90613a3f565b60405180910390fd5b8260000182815481106121a357fe5b9060005260206000200154905092915050565b60006121c182610ab8565b90506121cf816000846120db565b6121da6000836118b8565b60006009600084815260200190815260200160002080546001816001161561010002031660029004905014612229576009600083815260200190815260200160002060006122289190612af4565b5b61227a82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b5061228f8260036127d090919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000808284600001805490501161233c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233390613b5f565b60405180910390fd5b600084600001848154811061234d57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cc91906139fb565b60405180910390fd5b508460000160018203815481106123e857fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006124368473ffffffffffffffffffffffffffffffffffffffff166127ea565b6124435760019050612571565b606061250a63150b7a0260e01b6124586118b0565b88878760405160240161246e9493929190613994565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613fd3603291398773ffffffffffffffffffffffffffffffffffffffff166127fd9092919063ffffffff16565b90506000818060200190518101906125229190612fd1565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461267857600060018203905060006001866000018054905003905060008660000182815481106125e757fe5b906000526020600020015490508087600001848154811061260457fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061263c57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061267e565b60009150505b92915050565b60006126908383612815565b6126e95782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506126ee565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561279b578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506127c9565b828560000160018303815481106127ae57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60006127e2836000018360001b612838565b905092915050565b600080823b905060008111915050919050565b606061280c8484600085612951565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612945576000600182039050600060018660000180549050039050600086600001828154811061288357fe5b90600052602060002090600202019050808760000184815481106128a357fe5b90600052602060002090600202016000820154816000015560018201548160010155905050600183018760010160008360000154815260200190815260200160002081905550866000018054806128f657fe5b600190038181906000526020600020906002020160008082016000905560018201600090555050905586600101600087815260200190815260200160002060009055600194505050505061294b565b60009150505b92915050565b606061295c856127ea565b61299b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299290613c7f565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516129c5919061393e565b60006040518083038185875af1925050503d8060008114612a02576040519150601f19603f3d011682016040523d82523d6000602084013e612a07565b606091505b50915091508115612a1c578092505050612a6c565b600081511115612a2f5780518082602001fd5b836040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a6391906139fb565b60405180910390fd5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ab557805160ff1916838001178555612ae3565b82800160010185558215612ae3579182015b82811115612ae2578251825591602001919060010190612ac7565b5b509050612af09190612b3c565b5090565b50805460018160011615610100020316600290046000825580601f10612b1a5750612b39565b601f016020900490600052602060002090810190612b389190612b3c565b5b50565b5b80821115612b55576000816000905550600101612b3d565b5090565b600081359050612b6881613f5f565b92915050565b600081359050612b7d81613f76565b92915050565b600081359050612b9281613f8d565b92915050565b600081519050612ba781613f8d565b92915050565b600081359050612bbc81613fa4565b92915050565b600081519050612bd181613fa4565b92915050565b600082601f830112612be857600080fd5b8135612bfb612bf682613dc1565b613d94565b91508082526020830160208301858383011115612c1757600080fd5b612c22838284613f0c565b50505092915050565b600082601f830112612c3c57600080fd5b8135612c4f612c4a82613ded565b613d94565b91508082526020830160208301858383011115612c6b57600080fd5b612c76838284613f0c565b50505092915050565b600060c08284031215612c9157600080fd5b612c9b60c0613d94565b90506000612cab84828501612d33565b6000830152506020612cbf84828501612d33565b6020830152506040612cd384828501612d33565b604083015250606082013567ffffffffffffffff811115612cf357600080fd5b612cff84828501612c2b565b6060830152506080612d1384828501612d33565b60808301525060a0612d2784828501612b6e565b60a08301525092915050565b600081359050612d4281613fbb565b92915050565b600060208284031215612d5a57600080fd5b6000612d6884828501612b59565b91505092915050565b60008060408385031215612d8457600080fd5b6000612d9285828601612b59565b9250506020612da385828601612b59565b9150509250929050565b600080600060608486031215612dc257600080fd5b6000612dd086828701612b59565b9350506020612de186828701612b59565b9250506040612df286828701612d33565b9150509250925092565b60008060008060808587031215612e1257600080fd5b6000612e2087828801612b59565b9450506020612e3187828801612b59565b9350506040612e4287828801612d33565b925050606085013567ffffffffffffffff811115612e5f57600080fd5b612e6b87828801612bd7565b91505092959194509250565b60008060408385031215612e8a57600080fd5b6000612e9885828601612b59565b9250506020612ea985828601612b6e565b9150509250929050565b60008060408385031215612ec657600080fd5b6000612ed485828601612b59565b925050602083013567ffffffffffffffff811115612ef157600080fd5b612efd85828601612c7f565b9150509250929050565b60008060408385031215612f1a57600080fd5b6000612f2885828601612b59565b9250506020612f3985828601612d33565b9150509250929050565b600060208284031215612f5557600080fd5b6000612f6384828501612b98565b91505092915050565b60008060408385031215612f7f57600080fd5b6000612f8d85828601612b83565b9250506020612f9e85828601612d33565b9150509250929050565b600060208284031215612fba57600080fd5b6000612fc884828501612bad565b91505092915050565b600060208284031215612fe357600080fd5b6000612ff184828501612bc2565b91505092915050565b60006020828403121561300c57600080fd5b600061301a84828501612d33565b91505092915050565b61302c81613e8e565b82525050565b61303b81613e7c565b82525050565b61304a81613ea0565b82525050565b600061305b82613e2e565b6130658185613e44565b9350613075818560208601613f1b565b61307e81613f4e565b840191505092915050565b600061309482613e2e565b61309e8185613e55565b93506130ae818560208601613f1b565b80840191505092915050565b60006130c582613e39565b6130cf8185613e60565b93506130df818560208601613f1b565b6130e881613f4e565b840191505092915050565b60006130fe82613e39565b6131088185613e71565b9350613118818560208601613f1b565b80840191505092915050565b6000815460018116600081146131415760018114613167576131ab565b607f60028304166131528187613e60565b955060ff1983168652602086019350506131ab565b600282046131758187613e60565b955061318085613e19565b60005b828110156131a257815481890152600182019150602081019050613183565b80880195505050505b505092915050565b6000815460018116600081146131d057600181146131f557613239565b607f60028304166131e18187613e71565b955060ff1983168652808601935050613239565b600282046132038187613e71565b955061320e85613e19565b60005b8281101561323057815481890152600182019150602081019050613211565b82880195505050505b505092915050565b600061324e602283613e60565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132b4603283613e60565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061331a602683613e60565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613380601c83613e60565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006133c0602483613e60565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613426601983613e60565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613466602c83613e60565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006134cc603883613e60565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613532602a83613e60565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613598602283613e60565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135fe602083613e60565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061363e602c83613e60565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006136a4602083613e60565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006136e4602983613e60565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061374a602f83613e60565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006137b0601983613e60565b91507f54686520706f6c696379206d75737420626520616374697665000000000000006000830152602082019050919050565b60006137f0602183613e60565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613856603183613e60565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006138bc601d83613e60565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006138fc600d83613e60565b91507f4163636573732064656e696564000000000000000000000000000000000000006000830152602082019050919050565b61393881613f02565b82525050565b600061394a8284613089565b915081905092915050565b600061396182856131b3565b915061396d82846130f3565b91508190509392505050565b600060208201905061398e6000830184613032565b92915050565b60006080820190506139a96000830187613023565b6139b66020830186613032565b6139c3604083018561392f565b81810360608301526139d58184613050565b905095945050505050565b60006020820190506139f56000830184613041565b92915050565b60006020820190508181036000830152613a1581846130ba565b905092915050565b60006020820190508181036000830152613a378184613124565b905092915050565b60006020820190508181036000830152613a5881613241565b9050919050565b60006020820190508181036000830152613a78816132a7565b9050919050565b60006020820190508181036000830152613a988161330d565b9050919050565b60006020820190508181036000830152613ab881613373565b9050919050565b60006020820190508181036000830152613ad8816133b3565b9050919050565b60006020820190508181036000830152613af881613419565b9050919050565b60006020820190508181036000830152613b1881613459565b9050919050565b60006020820190508181036000830152613b38816134bf565b9050919050565b60006020820190508181036000830152613b5881613525565b9050919050565b60006020820190508181036000830152613b788161358b565b9050919050565b60006020820190508181036000830152613b98816135f1565b9050919050565b60006020820190508181036000830152613bb881613631565b9050919050565b60006020820190508181036000830152613bd881613697565b9050919050565b60006020820190508181036000830152613bf8816136d7565b9050919050565b60006020820190508181036000830152613c188161373d565b9050919050565b60006020820190508181036000830152613c38816137a3565b9050919050565b60006020820190508181036000830152613c58816137e3565b9050919050565b60006020820190508181036000830152613c7881613849565b9050919050565b60006020820190508181036000830152613c98816138af565b9050919050565b60006020820190508181036000830152613cb8816138ef565b9050919050565b6000602082019050613cd4600083018461392f565b92915050565b6000604082019050613cef600083018561392f565b613cfc6020830184613032565b9392505050565b6000604082019050613d18600083018561392f565b613d256020830184613041565b9392505050565b600060c082019050613d41600083018961392f565b613d4e602083018861392f565b613d5b604083018761392f565b8181036060830152613d6d81866130ba565b9050613d7c608083018561392f565b613d8960a0830184613041565b979650505050505050565b6000604051905081810181811067ffffffffffffffff82111715613db757600080fd5b8060405250919050565b600067ffffffffffffffff821115613dd857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613e0457600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613e8782613ee2565b9050919050565b6000613e9982613ee2565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613f39578082015181840152602081019050613f1e565b83811115613f48576000848401525b50505050565b6000601f19601f8301169050919050565b613f6881613e7c565b8114613f7357600080fd5b50565b613f7f81613ea0565b8114613f8a57600080fd5b50565b613f9681613eac565b8114613fa157600080fd5b50565b613fad81613eb6565b8114613fb857600080fd5b50565b613fc481613f02565b8114613fcf57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220f38716e713fae031010e6601d9a446904fd566c0786b83e7be8ea52a49804fa664736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "420:2506:3:-:0;;;844:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3567:365:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:17:31;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;751:40:32;418:10;770:20;;751:18;;;:40;;:::i;:::-;3647:4:39;3639:5;:12;;;;;;;;;;;;:::i;:::-;;3671:6;3661:7;:16;;;;;;;;;;;;:::i;:::-;;3765:40;2732:10;3784:20;;3765:18;;;:40;;:::i;:::-;3815:49;3064:10;3834:29;;3815:18;;;:49;;:::i;:::-;3874:51;3437:10;3893:31;;3874:18;;;:51;;:::i;:::-;3567:365;;980:8:3::1;968:9;;:20;;;;;;;;;;;;;;;;;;1014:12;998:13;;:28;;;;;;;;;;;;;;;;;;844:189:::0;;420:2506;;590:104:29;643:15;677:10;670:17;;590:104;:::o;1482:198:32:-;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:4;1633:20;:33;1654:11;1633:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1482:198;:::o;420:2506:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:180:-1:-;;112:6;106:13;97:22;;124:56;174:5;124:56;:::i;:::-;91:94;;;;:::o;192:170::-;;294:6;288:13;279:22;;306:51;351:5;306:51;:::i;:::-;273:89;;;;:::o;369:481::-;;;542:2;530:9;521:7;517:23;513:32;510:2;;;558:1;555;548:12;510:2;593:1;610:82;684:7;675:6;664:9;660:22;610:82;:::i;:::-;600:92;;572:126;729:2;747:87;826:7;817:6;806:9;802:22;747:87;:::i;:::-;737:97;;708:132;504:346;;;;;:::o;858:328::-;;1018:67;1082:2;1077:3;1018:67;:::i;:::-;1011:74;;1118:30;1114:1;1109:3;1105:11;1098:51;1177:2;1172:3;1168:12;1161:19;;1004:182;;;:::o;1194:416::-;;1394:2;1383:9;1379:18;1371:26;;1444:9;1438:4;1434:20;1430:1;1419:9;1415:17;1408:47;1469:131;1595:4;1469:131;:::i;:::-;1461:139;;1365:245;;;:::o;1618:163::-;;1733:6;1728:3;1721:19;1770:4;1765:3;1761:14;1746:29;;1714:67;;;;:::o;1789:91::-;;1851:24;1869:5;1851:24;:::i;:::-;1840:35;;1834:46;;;:::o;1887:114::-;;1972:24;1990:5;1972:24;:::i;:::-;1961:35;;1955:46;;;:::o;2008:109::-;;2088:24;2106:5;2088:24;:::i;:::-;2077:35;;2071:46;;;:::o;2124:121::-;;2197:42;2190:5;2186:54;2175:65;;2169:76;;;:::o;2252:163::-;2344:47;2385:5;2344:47;:::i;:::-;2337:5;2334:58;2324:2;;2406:1;2403;2396:12;2324:2;2318:97;:::o;2422:153::-;2509:42;2545:5;2509:42;:::i;:::-;2502:5;2499:53;2489:2;;2566:1;2563;2556:12;2489:2;2483:92;:::o;420:2506:3:-;;;;;;;",
  "deployedSourceMap": "420:2506:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4488:90:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7095:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6653:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6163:200;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7943:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5940:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1544:403:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8309:149:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6435:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2604:200:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4259:167:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5774:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3991:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1689:145:31;;;:::i;:::-;;1039:499:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1066:77:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:94:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7371:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8524:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1953:645:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4802:740:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;733:46:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;7727:154:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1983:240:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;948:140:32;1025:4;1048:20;:33;1069:11;1048:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:40;;948:140;;;:::o;4488:90:39:-;4534:13;4566:5;4559:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:90;:::o;7095:209::-;7163:7;7190:16;7198:7;7190;:16::i;:::-;7182:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7273:15;:24;7289:7;7273:24;;;;;;;;;;;;;;;;;;;;;7266:31;;7095:209;;;:::o;6653:381::-;6733:13;6749:16;6757:7;6749;:16::i;:::-;6733:32;;6789:5;6783:11;;:2;:11;;;;6775:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6867:5;6851:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;6876:37;6893:5;6900:12;:10;:12::i;:::-;6876:16;:37::i;:::-;6851:62;6843:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;7006:21;7015:2;7019:7;7006:8;:21::i;:::-;6653:381;;;:::o;6163:200::-;6216:7;6335:21;:12;:19;:21::i;:::-;6328:28;;6163:200;:::o;7943:300::-;8102:41;8121:12;:10;:12::i;:::-;8135:7;8102:18;:41::i;:::-;8094:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8208:28;8218:4;8224:2;8228:7;8208:9;:28::i;:::-;7943:300;;;:::o;5940:152::-;6029:7;6055:30;6079:5;6055:13;:20;6069:5;6055:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6048:37;;5940:152;;;;:::o;1544:403:3:-;1594:25;1622:8;:18;1631:8;1622:18;;;;;;;;;;;1594:46;;1658:6;:13;;;;;;;;;;;;1650:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1728:15;1715:6;:10;;;:28;1711:230;;;1759:21;1771:8;1759:11;:21::i;:::-;1711:230;;;1811:17;1831:13;;;;;;;;;;;:26;;;1858:6;:19;;1831:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1811:67;;1922:8;1892:16;:27;1909:9;1892:27;;;;;;;;;;;:38;;;;1711:230;;1544:403;;:::o;8309:149:39:-;8412:39;8429:4;8435:2;8439:7;8412:39;;;;;;;;;;;;:16;:39::i;:::-;8309:149;;;:::o;6435:161::-;6502:7;6522:15;6543:22;6559:5;6543:12;:15;;:22;;;;:::i;:::-;6521:44;;;6582:7;6575:14;;;6435:161;;;:::o;2604:200:3:-;2668:25;2696:8;:18;2705:8;2696:18;;;;;;;;;;;2668:46;;2724:9;;;;;;;;;;;:22;;;2747:6;:18;;;2724:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:21;2788:8;2776:11;:21::i;:::-;2604:200;;:::o;4259:167:39:-;4323:7;4349:70;4366:7;4349:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4342:77;;4259:167;;;:::o;5774:87::-;5814:13;5846:8;5839:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5774:87;:::o;3991:211::-;4055:7;4099:1;4082:19;;:5;:19;;;;4074:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4166:29;:13;:20;4180:5;4166:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4159:36;;3991:211;;;:::o;1689:145:31:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:1:::1;1758:40;;1779:6;::::0;::::1;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;1039:499:3:-;1162:15;1280:12:31;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1350:25:3::1;:15;:23;:25::i;:::-;1340:35;;1385:18;1391:2;1395:7;1385:5;:18::i;:::-;1413:27;:15;:25;:27::i;:::-;1466:7;1450:4;:13;;:23;;;::::0;::::1;1503:4;1483:8;:17;1492:7;1483:17;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:499:::0;;;;:::o;1066:77:31:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;4642:94:39:-;4690:13;4722:7;4715:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4642:94;:::o;7371:290::-;7485:12;:10;:12::i;:::-;7473:24;;:8;:24;;;;7465:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7583:8;7538:18;:32;7557:12;:10;:12::i;:::-;7538:32;;;;;;;;;;;;;;;:42;7571:8;7538:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7635:8;7606:48;;7621:12;:10;:12::i;:::-;7606:48;;;7645:8;7606:48;;;;;;:::i;:::-;;;;;;;;7371:290;;:::o;8524:282::-;8655:41;8674:12;:10;:12::i;:::-;8688:7;8655:18;:41::i;:::-;8647:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8760:39;8774:4;8780:2;8784:7;8793:5;8760:13;:39::i;:::-;8524:282;;;;:::o;1953:645:3:-;2095:13;;;;;;;;;;;2073:36;;:10;:36;;;2065:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2137:16;2156;:27;2173:9;2156:27;;;;;;;;;;;;2137:46;;2193:25;2221:8;:18;2230:8;2221:18;;;;;;;;;;;2193:46;;2249:14;2266:17;2274:8;2266:7;:17::i;:::-;2249:34;;2297:6;:13;;;;;;;;;;;;:50;;;;;2329:6;:18;;;2314:12;:33;2297:50;2293:299;;;2363:9;;;;;;;;;;;:25;;;2389:6;:18;;;2409:6;2363:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:21;2442:8;2430:11;:21::i;:::-;2484:6;2470:37;;;2492:8;2502:4;2470:37;;;;;;;:::i;:::-;;;;;;;;2293:299;;;2557:6;2543:38;;;2565:8;2575:5;2543:38;;;;;;;:::i;:::-;;;;;;;;2293:299;1953:645;;;;;:::o;4802:740:39:-;4867:13;4900:16;4908:7;4900;:16::i;:::-;4892:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4979:23;5005:10;:19;5016:7;5005:19;;;;;;;;;;;4979:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5123:1;5103:8;5097:22;;;;;;;;;;;;;;;;:27;5093:74;;;5147:9;5140:16;;;;;5093:74;5295:1;5275:9;5269:23;:27;5265:110;;;5343:8;5353:9;5326:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5312:52;;;;;5265:110;5505:8;5515:18;:7;:16;:18::i;:::-;5488:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5474:61;;;4802:740;;;;:::o;733:46:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7727:154:39:-;7816:4;7839:18;:25;7858:5;7839:25;;;;;;;;;;;;;;;:35;7865:8;7839:35;;;;;;;;;;;;;;;;;;;;;;;;;7832:42;;7727:154;;;;:::o;1983:240:31:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;10240:117:39:-;10297:4;10320:30;10342:7;10320:12;:21;;:30;;;;:::i;:::-;10313:37;;10240:117;;;:::o;590:104:29:-;643:15;677:10;670:17;;590:104;:::o;15896:155:39:-;15988:2;15961:15;:24;15977:7;15961:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16036:7;16032:2;16005:39;;16014:16;16022:7;16014;:16::i;:::-;16005:39;;;;;;;;;;;;15896:155;;:::o;7023:121:46:-;7092:7;7118:19;7126:3;:10;;7118:7;:19::i;:::-;7111:26;;7023:121;;;:::o;10515:329:39:-;10600:4;10624:16;10632:7;10624;:16::i;:::-;10616:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10699:13;10715:16;10723:7;10715;:16::i;:::-;10699:32;;10760:5;10749:16;;:7;:16;;;:51;;;;10793:7;10769:31;;:20;10781:7;10769:11;:20::i;:::-;:31;;;10749:51;:87;;;;10804:32;10821:5;10828:7;10804:16;:32::i;:::-;10749:87;10741:96;;;10515:329;;;;:::o;13509:559::-;13626:4;13606:24;;:16;13614:7;13606;:16::i;:::-;:24;;;13598:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;13708:1;13694:16;;:2;:16;;;;13686:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;13762:39;13783:4;13789:2;13793:7;13762:20;:39::i;:::-;13863:29;13880:1;13884:7;13863:8;:29::i;:::-;13903:35;13930:7;13903:13;:19;13917:4;13903:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;13948:30;13970:7;13948:13;:17;13962:2;13948:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;13989:29;14006:7;14015:2;13989:12;:16;;:29;;;;;:::i;:::-;;14053:7;14049:2;14034:27;;14043:4;14034:27;;;;;;;;;;;;13509:559;;;:::o;7649:135:47:-;7720:7;7754:22;7758:3;:10;;7770:5;7754:3;:22::i;:::-;7746:31;;7739:38;;7649:135;;;;:::o;2810:114:3:-;2867:15;2873:8;2867:5;:15::i;:::-;2899:8;:18;2908:8;2899:18;;;;;;;;;;;;2892:25;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2810:114;:::o;7472:224:46:-;7552:7;7561;7581:11;7594:13;7611:22;7615:3;:10;;7627:5;7611:3;:22::i;:::-;7580:53;;;;7659:3;7651:12;;7681:5;7673:14;;7643:46;;;;;;7472:224;;;;;:::o;8115:202::-;8222:7;8264:44;8269:3;:10;;8289:3;8281:12;;8295;8264:4;:44::i;:::-;8256:53;;8241:69;;8115:202;;;;;:::o;7205:112:47:-;7265:7;7291:19;7299:3;:10;;7291:7;:19::i;:::-;7284:26;;7205:112;;;:::o;1098::45:-;1163:7;1189;:14;;;1182:21;;1098:112;;;:::o;12073:393:39:-;12166:1;12152:16;;:2;:16;;;;12144:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;12224:16;12232:7;12224;:16::i;:::-;12223:17;12215:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;12284:45;12313:1;12317:2;12321:7;12284:20;:45::i;:::-;12340:30;12362:7;12340:13;:17;12354:2;12340:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12381:29;12398:7;12407:2;12381:12;:16;;:29;;;;;:::i;:::-;;12451:7;12447:2;12426:33;;12443:1;12426:33;;;;;;;;;;;;12073:393;;:::o;1216:178:45:-;1386:1;1368:7;:14;;;:19;;;;;;;;;;;1216:178;:::o;9668:269:39:-;9781:28;9791:4;9797:2;9801:7;9781:9;:28::i;:::-;9827:48;9850:4;9856:2;9860:7;9869:5;9827:22;:48::i;:::-;9819:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;9668:269;;;;:::o;202:723:48:-;258:13;484:1;475:5;:10;471:51;;;501:10;;;;;;;;;;;;;;;;;;;;;471:51;531:12;546:5;531:20;;561:14;585:75;600:1;592:4;:9;585:75;;617:8;;;;;;;647:2;639:10;;;;;;;;;585:75;;;669:19;701:6;691:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:39;;718:13;743:1;734:6;:10;718:26;;761:5;754:12;;776:112;791:1;783:4;:9;776:112;;849:2;842:4;:9;;;;;;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;;;;;;;;;;;875:2;867:10;;;;;;;;;776:112;;;911:6;897:21;;;;;;202:723;;;;:::o;6791:149:46:-;6875:4;6898:35;6908:3;:10;;6928:3;6920:12;;6898:9;:35::i;:::-;6891:42;;6791:149;;;;:::o;4483:108::-;4539:7;4565:3;:12;;:19;;;;4558:26;;4483:108;;;:::o;16647:93:39:-;;;;:::o;6764:135:47:-;6834:4;6857:35;6865:3;:10;;6885:5;6877:14;;6857:7;:35::i;:::-;6850:42;;6764:135;;;;:::o;6467:129::-;6534:4;6557:32;6562:3;:10;;6582:5;6574:14;;6557:4;:32::i;:::-;6550:39;;6467:129;;;;:::o;6239:174:46:-;6328:4;6351:55;6356:3;:10;;6376:3;6368:12;;6398:5;6390:14;;6382:23;;6351:4;:55::i;:::-;6344:62;;6239:174;;;;;:::o;4423:201:47:-;4490:7;4538:5;4517:3;:11;;:18;;;;:26;4509:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;12683:502:39:-;12742:13;12758:16;12766:7;12758;:16::i;:::-;12742:32;;12785:48;12806:5;12821:1;12825:7;12785:20;:48::i;:::-;12871:29;12888:1;12892:7;12871:8;:29::i;:::-;12987:1;12956:10;:19;12967:7;12956:19;;;;;;;;;;;12950:33;;;;;;;;;;;;;;;;:38;12946:95;;13011:10;:19;13022:7;13011:19;;;;;;;;;;;;13004:26;;;;:::i;:::-;12946:95;13051:36;13079:7;13051:13;:20;13065:5;13051:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;13098:28;13118:7;13098:12;:19;;:28;;;;:::i;:::-;;13170:7;13166:1;13142:36;;13151:5;13142:36;;;;;;;;;;;;12683:502;;:::o;4934:274:46:-;5001:7;5010;5059:5;5037:3;:12;;:19;;;;:27;5029:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;5615:315::-;5709:7;5728:16;5747:3;:12;;:17;5760:3;5747:17;;;;;;;;;;;;5728:36;;5794:1;5782:8;:13;;5797:12;5774:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5863:3;:12;;5887:1;5876:8;:12;5863:26;;;;;;;;;;;;;;;;;;:33;;;5856:40;;;5615:315;;;;;:::o;3984:107:47:-;4040:7;4066:3;:11;;:18;;;;4059:25;;3984:107;;;:::o;15301:589:39:-;15421:4;15446:15;:2;:13;;;:15::i;:::-;15441:58;;15484:4;15477:11;;;;15441:58;15508:23;15534:246;15586:45;;;15645:12;:10;:12::i;:::-;15671:4;15689:7;15710:5;15550:175;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15534:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15508:272;;15790:13;15817:10;15806:32;;;;;;;;;;;;:::i;:::-;15790:48;;1068:10;15866:16;;15856:26;;;:6;:26;;;;15848:35;;;;15301:589;;;;;;;:::o;4270:123:46:-;4341:4;4385:1;4364:3;:12;;:17;4377:3;4364:17;;;;;;;;;;;;:22;;4357:29;;4270:123;;;;:::o;2183:1512:47:-;2249:4;2365:18;2386:3;:12;;:19;2399:5;2386:19;;;;;;;;;;;;2365:40;;2434:1;2420:10;:15;2416:1273;;2777:21;2814:1;2801:10;:14;2777:38;;2829:17;2870:1;2849:3;:11;;:18;;;;:22;2829:42;;3111:17;3131:3;:11;;3143:9;3131:22;;;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;:38;;;;3391:1;3375:13;:17;3349:3;:12;;:23;3362:9;3349:23;;;;;;;;;;;:43;;;;3498:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;2183:1512;;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;1828:678:46:-;1904:4;2018:16;2037:3;:12;;:17;2050:3;2037:17;;;;;;;;;;;;2018:36;;2081:1;2069:8;:13;2065:435;;;2135:3;:12;;2153:38;;;;;;;;2170:3;2153:38;;;;2183:5;2153:38;;;2135:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:3;:12;;:19;;;;2327:3;:12;;:17;2340:3;2327:17;;;;;;;;;;;:39;;;;2387:4;2380:11;;;;;2065:435;2458:5;2422:3;:12;;2446:1;2435:8;:12;2422:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;1828:678;;;;;;:::o;6572:140::-;6649:4;6672:33;6680:3;:10;;6700:3;6692:12;;6672:7;:33::i;:::-;6665:40;;6572:140;;;;:::o;718:413:44:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;3573:194::-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;;3573:194;;;;;:::o;3776:127:47:-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;2674:1517:46:-;2738:4;2852:16;2871:3;:12;;:17;2884:3;2871:17;;;;;;;;;;;;2852:36;;2915:1;2903:8;:13;2899:1286;;3259:21;3294:1;3283:8;:12;3259:36;;3309:17;3351:1;3329:3;:12;;:19;;;;:23;3309:43;;3592:26;3621:3;:12;;3634:9;3621:23;;;;;;;;;;;;;;;;;;3592:52;;3766:9;3736:3;:12;;3749:13;3736:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3888:1;3872:13;:17;3841:3;:12;;:28;3854:9;:14;;;3841:28;;;;;;;;;;;:48;;;;3995:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4088:3;:12;;:17;4101:3;4088:17;;;;;;;;;;;4081:24;;;4127:4;4120:11;;;;;;;;2899:1286;4169:5;4162:12;;;2674:1517;;;;;:::o;4920:958:44:-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5205:12;5219:23;5246:6;:11;;5266:8;5277:4;5246:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;5319:17;;;;;;5292:580;5457:1;5437:10;:17;:21;5433:429;;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5834:12;5827:20;;;;;;;;;;;:::i;:::-;;;;;;;;4920:958;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:124::-;;219:6;206:20;197:29;;231:30;255:5;231:30;:::i;:::-;191:75;;;;:::o;273:130::-;;353:6;340:20;331:29;;365:33;392:5;365:33;:::i;:::-;325:78;;;;:::o;410:134::-;;494:6;488:13;479:22;;506:33;533:5;506:33;:::i;:::-;473:71;;;;:::o;551:128::-;;630:6;617:20;608:29;;642:32;668:5;642:32;:::i;:::-;602:77;;;;:::o;686:132::-;;769:6;763:13;754:22;;781:32;807:5;781:32;:::i;:::-;748:70;;;;:::o;826:440::-;;927:3;920:4;912:6;908:17;904:27;894:2;;945:1;942;935:12;894:2;982:6;969:20;1004:64;1019:48;1060:6;1019:48;:::i;:::-;1004:64;:::i;:::-;995:73;;1088:6;1081:5;1074:21;1124:4;1116:6;1112:17;1157:4;1150:5;1146:16;1192:3;1183:6;1178:3;1174:16;1171:25;1168:2;;;1209:1;1206;1199:12;1168:2;1219:41;1253:6;1248:3;1243;1219:41;:::i;:::-;887:379;;;;;;;:::o;1275:442::-;;1377:3;1370:4;1362:6;1358:17;1354:27;1344:2;;1395:1;1392;1385:12;1344:2;1432:6;1419:20;1454:65;1469:49;1511:6;1469:49;:::i;:::-;1454:65;:::i;:::-;1445:74;;1539:6;1532:5;1525:21;1575:4;1567:6;1563:17;1608:4;1601:5;1597:16;1643:3;1634:6;1629:3;1625:16;1622:25;1619:2;;;1660:1;1657;1650:12;1619:2;1670:41;1704:6;1699:3;1694;1670:41;:::i;:::-;1337:380;;;;;;;:::o;1757:1168::-;;1874:4;1862:9;1857:3;1853:19;1849:30;1846:2;;;1892:1;1889;1882:12;1846:2;1910:20;1925:4;1910:20;:::i;:::-;1901:29;;1984:1;2016:49;2061:3;2052:6;2041:9;2037:22;2016:49;:::i;:::-;2009:4;2002:5;1998:16;1991:75;1940:137;2134:2;2167:49;2212:3;2203:6;2192:9;2188:22;2167:49;:::i;:::-;2160:4;2153:5;2149:16;2142:75;2087:141;2277:2;2310:49;2355:3;2346:6;2335:9;2331:22;2310:49;:::i;:::-;2303:4;2296:5;2292:16;2285:75;2238:133;2457:2;2446:9;2442:18;2429:32;2481:18;2473:6;2470:30;2467:2;;;2513:1;2510;2503:12;2467:2;2548:59;2603:3;2594:6;2583:9;2579:22;2548:59;:::i;:::-;2541:4;2534:5;2530:16;2523:85;2381:238;2676:3;2710:49;2755:3;2746:6;2735:9;2731:22;2710:49;:::i;:::-;2703:4;2696:5;2692:16;2685:75;2629:142;2823:3;2857:46;2899:3;2890:6;2879:9;2875:22;2857:46;:::i;:::-;2850:4;2843:5;2839:16;2832:72;2781:134;1840:1085;;;;:::o;2932:130::-;;3012:6;2999:20;2990:29;;3024:33;3051:5;3024:33;:::i;:::-;2984:78;;;;:::o;3069:241::-;;3173:2;3161:9;3152:7;3148:23;3144:32;3141:2;;;3189:1;3186;3179:12;3141:2;3224:1;3241:53;3286:7;3277:6;3266:9;3262:22;3241:53;:::i;:::-;3231:63;;3203:97;3135:175;;;;:::o;3317:366::-;;;3438:2;3426:9;3417:7;3413:23;3409:32;3406:2;;;3454:1;3451;3444:12;3406:2;3489:1;3506:53;3551:7;3542:6;3531:9;3527:22;3506:53;:::i;:::-;3496:63;;3468:97;3596:2;3614:53;3659:7;3650:6;3639:9;3635:22;3614:53;:::i;:::-;3604:63;;3575:98;3400:283;;;;;:::o;3690:491::-;;;;3828:2;3816:9;3807:7;3803:23;3799:32;3796:2;;;3844:1;3841;3834:12;3796:2;3879:1;3896:53;3941:7;3932:6;3921:9;3917:22;3896:53;:::i;:::-;3886:63;;3858:97;3986:2;4004:53;4049:7;4040:6;4029:9;4025:22;4004:53;:::i;:::-;3994:63;;3965:98;4094:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4073:98;3790:391;;;;;:::o;4188:721::-;;;;;4352:3;4340:9;4331:7;4327:23;4323:33;4320:2;;;4369:1;4366;4359:12;4320:2;4404:1;4421:53;4466:7;4457:6;4446:9;4442:22;4421:53;:::i;:::-;4411:63;;4383:97;4511:2;4529:53;4574:7;4565:6;4554:9;4550:22;4529:53;:::i;:::-;4519:63;;4490:98;4619:2;4637:53;4682:7;4673:6;4662:9;4658:22;4637:53;:::i;:::-;4627:63;;4598:98;4755:2;4744:9;4740:18;4727:32;4779:18;4771:6;4768:30;4765:2;;;4811:1;4808;4801:12;4765:2;4831:62;4885:7;4876:6;4865:9;4861:22;4831:62;:::i;:::-;4821:72;;4706:193;4314:595;;;;;;;:::o;4916:360::-;;;5034:2;5022:9;5013:7;5009:23;5005:32;5002:2;;;5050:1;5047;5040:12;5002:2;5085:1;5102:53;5147:7;5138:6;5127:9;5123:22;5102:53;:::i;:::-;5092:63;;5064:97;5192:2;5210:50;5252:7;5243:6;5232:9;5228:22;5210:50;:::i;:::-;5200:60;;5171:95;4996:280;;;;;:::o;5283:508::-;;;5432:2;5420:9;5411:7;5407:23;5403:32;5400:2;;;5448:1;5445;5438:12;5400:2;5483:1;5500:53;5545:7;5536:6;5525:9;5521:22;5500:53;:::i;:::-;5490:63;;5462:97;5618:2;5607:9;5603:18;5590:32;5642:18;5634:6;5631:30;5628:2;;;5674:1;5671;5664:12;5628:2;5694:81;5767:7;5758:6;5747:9;5743:22;5694:81;:::i;:::-;5684:91;;5569:212;5394:397;;;;;:::o;5798:366::-;;;5919:2;5907:9;5898:7;5894:23;5890:32;5887:2;;;5935:1;5932;5925:12;5887:2;5970:1;5987:53;6032:7;6023:6;6012:9;6008:22;5987:53;:::i;:::-;5977:63;;5949:97;6077:2;6095:53;6140:7;6131:6;6120:9;6116:22;6095:53;:::i;:::-;6085:63;;6056:98;5881:283;;;;;:::o;6171:263::-;;6286:2;6274:9;6265:7;6261:23;6257:32;6254:2;;;6302:1;6299;6292:12;6254:2;6337:1;6354:64;6410:7;6401:6;6390:9;6386:22;6354:64;:::i;:::-;6344:74;;6316:108;6248:186;;;;:::o;6441:366::-;;;6562:2;6550:9;6541:7;6537:23;6533:32;6530:2;;;6578:1;6575;6568:12;6530:2;6613:1;6630:53;6675:7;6666:6;6655:9;6651:22;6630:53;:::i;:::-;6620:63;;6592:97;6720:2;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6699:98;6524:283;;;;;:::o;6814:239::-;;6917:2;6905:9;6896:7;6892:23;6888:32;6885:2;;;6933:1;6930;6923:12;6885:2;6968:1;6985:52;7029:7;7020:6;7009:9;7005:22;6985:52;:::i;:::-;6975:62;;6947:96;6879:174;;;;:::o;7060:261::-;;7174:2;7162:9;7153:7;7149:23;7145:32;7142:2;;;7190:1;7187;7180:12;7142:2;7225:1;7242:63;7297:7;7288:6;7277:9;7273:22;7242:63;:::i;:::-;7232:73;;7204:107;7136:185;;;;:::o;7328:241::-;;7432:2;7420:9;7411:7;7407:23;7403:32;7400:2;;;7448:1;7445;7438:12;7400:2;7483:1;7500:53;7545:7;7536:6;7525:9;7521:22;7500:53;:::i;:::-;7490:63;;7462:97;7394:175;;;;:::o;7576:137::-;7675:32;7701:5;7675:32;:::i;:::-;7670:3;7663:45;7657:56;;:::o;7720:113::-;7803:24;7821:5;7803:24;:::i;:::-;7798:3;7791:37;7785:48;;:::o;7840:104::-;7917:21;7932:5;7917:21;:::i;:::-;7912:3;7905:34;7899:45;;:::o;7951:343::-;;8061:38;8093:5;8061:38;:::i;:::-;8111:70;8174:6;8169:3;8111:70;:::i;:::-;8104:77;;8186:52;8231:6;8226:3;8219:4;8212:5;8208:16;8186:52;:::i;:::-;8259:29;8281:6;8259:29;:::i;:::-;8254:3;8250:39;8243:46;;8041:253;;;;;:::o;8301:356::-;;8429:38;8461:5;8429:38;:::i;:::-;8479:88;8560:6;8555:3;8479:88;:::i;:::-;8472:95;;8572:52;8617:6;8612:3;8605:4;8598:5;8594:16;8572:52;:::i;:::-;8645:6;8640:3;8636:16;8629:23;;8409:248;;;;;:::o;8664:347::-;;8776:39;8809:5;8776:39;:::i;:::-;8827:71;8891:6;8886:3;8827:71;:::i;:::-;8820:78;;8903:52;8948:6;8943:3;8936:4;8929:5;8925:16;8903:52;:::i;:::-;8976:29;8998:6;8976:29;:::i;:::-;8971:3;8967:39;8960:46;;8756:255;;;;;:::o;9018:360::-;;9148:39;9181:5;9148:39;:::i;:::-;9199:89;9281:6;9276:3;9199:89;:::i;:::-;9192:96;;9293:52;9338:6;9333:3;9326:4;9319:5;9315:16;9293:52;:::i;:::-;9366:6;9361:3;9357:16;9350:23;;9128:250;;;;;:::o;9410:823::-;;9529:5;9523:12;9563:1;9552:9;9548:17;9576:1;9571:248;;;;9830:1;9825:402;;;;9541:686;;9571:248;9649:4;9645:1;9634:9;9630:17;9626:28;9668:71;9732:6;9727:3;9668:71;:::i;:::-;9661:78;;9777:4;9773:9;9762;9758:25;9753:3;9746:38;9807:4;9802:3;9798:14;9791:21;;9578:241;9571:248;;9825:402;9894:1;9883:9;9879:17;9910:71;9974:6;9969:3;9910:71;:::i;:::-;9903:78;;10003:38;10035:5;10003:38;:::i;:::-;10057:1;10065:130;10079:6;10076:1;10073:13;10065:130;;;10144:7;10138:14;10134:1;10129:3;10125:11;10118:35;10185:1;10176:7;10172:15;10161:26;;10101:4;10098:1;10094:12;10089:17;;10065:130;;;10218:1;10213:3;10209:11;10202:18;;9832:395;;;9541:686;;9499:734;;;;;:::o;10266:884::-;;10403:5;10397:12;10437:1;10426:9;10422:17;10450:1;10445:268;;;;10724:1;10719:425;;;;10415:729;;10445:268;10523:4;10519:1;10508:9;10504:17;10500:28;10542:89;10624:6;10619:3;10542:89;:::i;:::-;10535:96;;10669:4;10665:9;10654;10650:25;10645:3;10638:38;10699:6;10694:3;10690:16;10683:23;;10452:261;10445:268;;10719:425;10788:1;10777:9;10773:17;10804:89;10886:6;10881:3;10804:89;:::i;:::-;10797:96;;10915:38;10947:5;10915:38;:::i;:::-;10969:1;10977:130;10991:6;10988:1;10985:13;10977:130;;;11056:7;11050:14;11046:1;11041:3;11037:11;11030:35;11097:1;11088:7;11084:15;11073:26;;11013:4;11010:1;11006:12;11001:17;;10977:130;;;11130:6;11125:3;11121:16;11114:23;;10726:418;;;10415:729;;10373:777;;;;;:::o;11159:371::-;;11319:67;11383:2;11378:3;11319:67;:::i;:::-;11312:74;;11419:34;11415:1;11410:3;11406:11;11399:55;11488:4;11483:2;11478:3;11474:12;11467:26;11521:2;11516:3;11512:12;11505:19;;11305:225;;;:::o;11539:387::-;;11699:67;11763:2;11758:3;11699:67;:::i;:::-;11692:74;;11799:34;11795:1;11790:3;11786:11;11779:55;11868:20;11863:2;11858:3;11854:12;11847:42;11917:2;11912:3;11908:12;11901:19;;11685:241;;;:::o;11935:375::-;;12095:67;12159:2;12154:3;12095:67;:::i;:::-;12088:74;;12195:34;12191:1;12186:3;12182:11;12175:55;12264:8;12259:2;12254:3;12250:12;12243:30;12301:2;12296:3;12292:12;12285:19;;12081:229;;;:::o;12319:328::-;;12479:67;12543:2;12538:3;12479:67;:::i;:::-;12472:74;;12579:30;12575:1;12570:3;12566:11;12559:51;12638:2;12633:3;12629:12;12622:19;;12465:182;;;:::o;12656:373::-;;12816:67;12880:2;12875:3;12816:67;:::i;:::-;12809:74;;12916:34;12912:1;12907:3;12903:11;12896:55;12985:6;12980:2;12975:3;12971:12;12964:28;13020:2;13015:3;13011:12;13004:19;;12802:227;;;:::o;13038:325::-;;13198:67;13262:2;13257:3;13198:67;:::i;:::-;13191:74;;13298:27;13294:1;13289:3;13285:11;13278:48;13354:2;13349:3;13345:12;13338:19;;13184:179;;;:::o;13372:381::-;;13532:67;13596:2;13591:3;13532:67;:::i;:::-;13525:74;;13632:34;13628:1;13623:3;13619:11;13612:55;13701:14;13696:2;13691:3;13687:12;13680:36;13744:2;13739:3;13735:12;13728:19;;13518:235;;;:::o;13762:393::-;;13922:67;13986:2;13981:3;13922:67;:::i;:::-;13915:74;;14022:34;14018:1;14013:3;14009:11;14002:55;14091:26;14086:2;14081:3;14077:12;14070:48;14146:2;14141:3;14137:12;14130:19;;13908:247;;;:::o;14164:379::-;;14324:67;14388:2;14383:3;14324:67;:::i;:::-;14317:74;;14424:34;14420:1;14415:3;14411:11;14404:55;14493:12;14488:2;14483:3;14479:12;14472:34;14534:2;14529:3;14525:12;14518:19;;14310:233;;;:::o;14552:371::-;;14712:67;14776:2;14771:3;14712:67;:::i;:::-;14705:74;;14812:34;14808:1;14803:3;14799:11;14792:55;14881:4;14876:2;14871:3;14867:12;14860:26;14914:2;14909:3;14905:12;14898:19;;14698:225;;;:::o;14932:332::-;;15092:67;15156:2;15151:3;15092:67;:::i;:::-;15085:74;;15192:34;15188:1;15183:3;15179:11;15172:55;15255:2;15250:3;15246:12;15239:19;;15078:186;;;:::o;15273:381::-;;15433:67;15497:2;15492:3;15433:67;:::i;:::-;15426:74;;15533:34;15529:1;15524:3;15520:11;15513:55;15602:14;15597:2;15592:3;15588:12;15581:36;15645:2;15640:3;15636:12;15629:19;;15419:235;;;:::o;15663:332::-;;15823:67;15887:2;15882:3;15823:67;:::i;:::-;15816:74;;15923:34;15919:1;15914:3;15910:11;15903:55;15986:2;15981:3;15977:12;15970:19;;15809:186;;;:::o;16004:378::-;;16164:67;16228:2;16223:3;16164:67;:::i;:::-;16157:74;;16264:34;16260:1;16255:3;16251:11;16244:55;16333:11;16328:2;16323:3;16319:12;16312:33;16373:2;16368:3;16364:12;16357:19;;16150:232;;;:::o;16391:384::-;;16551:67;16615:2;16610:3;16551:67;:::i;:::-;16544:74;;16651:34;16647:1;16642:3;16638:11;16631:55;16720:17;16715:2;16710:3;16706:12;16699:39;16766:2;16761:3;16757:12;16750:19;;16537:238;;;:::o;16784:325::-;;16944:67;17008:2;17003:3;16944:67;:::i;:::-;16937:74;;17044:27;17040:1;17035:3;17031:11;17024:48;17100:2;17095:3;17091:12;17084:19;;16930:179;;;:::o;17118:370::-;;17278:67;17342:2;17337:3;17278:67;:::i;:::-;17271:74;;17378:34;17374:1;17369:3;17365:11;17358:55;17447:3;17442:2;17437:3;17433:12;17426:25;17479:2;17474:3;17470:12;17463:19;;17264:224;;;:::o;17497:386::-;;17657:67;17721:2;17716:3;17657:67;:::i;:::-;17650:74;;17757:34;17753:1;17748:3;17744:11;17737:55;17826:19;17821:2;17816:3;17812:12;17805:41;17874:2;17869:3;17865:12;17858:19;;17643:240;;;:::o;17892:329::-;;18052:67;18116:2;18111:3;18052:67;:::i;:::-;18045:74;;18152:31;18148:1;18143:3;18139:11;18132:52;18212:2;18207:3;18203:12;18196:19;;18038:183;;;:::o;18230:313::-;;18390:67;18454:2;18449:3;18390:67;:::i;:::-;18383:74;;18490:15;18486:1;18481:3;18477:11;18470:36;18534:2;18529:3;18525:12;18518:19;;18376:167;;;:::o;18551:113::-;18634:24;18652:5;18634:24;:::i;:::-;18629:3;18622:37;18616:48;;:::o;18671:271::-;;18824:93;18913:3;18904:6;18824:93;:::i;:::-;18817:100;;18934:3;18927:10;;18805:137;;;;:::o;18949:430::-;;19149:92;19237:3;19228:6;19149:92;:::i;:::-;19142:99;;19259:95;19350:3;19341:6;19259:95;:::i;:::-;19252:102;;19371:3;19364:10;;19130:249;;;;;:::o;19386:222::-;;19513:2;19502:9;19498:18;19490:26;;19527:71;19595:1;19584:9;19580:17;19571:6;19527:71;:::i;:::-;19484:124;;;;:::o;19615:672::-;;19860:3;19849:9;19845:19;19837:27;;19875:87;19959:1;19948:9;19944:17;19935:6;19875:87;:::i;:::-;19973:72;20041:2;20030:9;20026:18;20017:6;19973:72;:::i;:::-;20056;20124:2;20113:9;20109:18;20100:6;20056:72;:::i;:::-;20176:9;20170:4;20166:20;20161:2;20150:9;20146:18;20139:48;20201:76;20272:4;20263:6;20201:76;:::i;:::-;20193:84;;19831:456;;;;;;;:::o;20294:210::-;;20415:2;20404:9;20400:18;20392:26;;20429:65;20491:1;20480:9;20476:17;20467:6;20429:65;:::i;:::-;20386:118;;;;:::o;20511:310::-;;20658:2;20647:9;20643:18;20635:26;;20708:9;20702:4;20698:20;20694:1;20683:9;20679:17;20672:47;20733:78;20806:4;20797:6;20733:78;:::i;:::-;20725:86;;20629:192;;;;:::o;20828:304::-;;20972:2;20961:9;20957:18;20949:26;;21022:9;21016:4;21012:20;21008:1;20997:9;20993:17;20986:47;21047:75;21117:4;21108:6;21047:75;:::i;:::-;21039:83;;20943:189;;;;:::o;21139:416::-;;21339:2;21328:9;21324:18;21316:26;;21389:9;21383:4;21379:20;21375:1;21364:9;21360:17;21353:47;21414:131;21540:4;21414:131;:::i;:::-;21406:139;;21310:245;;;:::o;21562:416::-;;21762:2;21751:9;21747:18;21739:26;;21812:9;21806:4;21802:20;21798:1;21787:9;21783:17;21776:47;21837:131;21963:4;21837:131;:::i;:::-;21829:139;;21733:245;;;:::o;21985:416::-;;22185:2;22174:9;22170:18;22162:26;;22235:9;22229:4;22225:20;22221:1;22210:9;22206:17;22199:47;22260:131;22386:4;22260:131;:::i;:::-;22252:139;;22156:245;;;:::o;22408:416::-;;22608:2;22597:9;22593:18;22585:26;;22658:9;22652:4;22648:20;22644:1;22633:9;22629:17;22622:47;22683:131;22809:4;22683:131;:::i;:::-;22675:139;;22579:245;;;:::o;22831:416::-;;23031:2;23020:9;23016:18;23008:26;;23081:9;23075:4;23071:20;23067:1;23056:9;23052:17;23045:47;23106:131;23232:4;23106:131;:::i;:::-;23098:139;;23002:245;;;:::o;23254:416::-;;23454:2;23443:9;23439:18;23431:26;;23504:9;23498:4;23494:20;23490:1;23479:9;23475:17;23468:47;23529:131;23655:4;23529:131;:::i;:::-;23521:139;;23425:245;;;:::o;23677:416::-;;23877:2;23866:9;23862:18;23854:26;;23927:9;23921:4;23917:20;23913:1;23902:9;23898:17;23891:47;23952:131;24078:4;23952:131;:::i;:::-;23944:139;;23848:245;;;:::o;24100:416::-;;24300:2;24289:9;24285:18;24277:26;;24350:9;24344:4;24340:20;24336:1;24325:9;24321:17;24314:47;24375:131;24501:4;24375:131;:::i;:::-;24367:139;;24271:245;;;:::o;24523:416::-;;24723:2;24712:9;24708:18;24700:26;;24773:9;24767:4;24763:20;24759:1;24748:9;24744:17;24737:47;24798:131;24924:4;24798:131;:::i;:::-;24790:139;;24694:245;;;:::o;24946:416::-;;25146:2;25135:9;25131:18;25123:26;;25196:9;25190:4;25186:20;25182:1;25171:9;25167:17;25160:47;25221:131;25347:4;25221:131;:::i;:::-;25213:139;;25117:245;;;:::o;25369:416::-;;25569:2;25558:9;25554:18;25546:26;;25619:9;25613:4;25609:20;25605:1;25594:9;25590:17;25583:47;25644:131;25770:4;25644:131;:::i;:::-;25636:139;;25540:245;;;:::o;25792:416::-;;25992:2;25981:9;25977:18;25969:26;;26042:9;26036:4;26032:20;26028:1;26017:9;26013:17;26006:47;26067:131;26193:4;26067:131;:::i;:::-;26059:139;;25963:245;;;:::o;26215:416::-;;26415:2;26404:9;26400:18;26392:26;;26465:9;26459:4;26455:20;26451:1;26440:9;26436:17;26429:47;26490:131;26616:4;26490:131;:::i;:::-;26482:139;;26386:245;;;:::o;26638:416::-;;26838:2;26827:9;26823:18;26815:26;;26888:9;26882:4;26878:20;26874:1;26863:9;26859:17;26852:47;26913:131;27039:4;26913:131;:::i;:::-;26905:139;;26809:245;;;:::o;27061:416::-;;27261:2;27250:9;27246:18;27238:26;;27311:9;27305:4;27301:20;27297:1;27286:9;27282:17;27275:47;27336:131;27462:4;27336:131;:::i;:::-;27328:139;;27232:245;;;:::o;27484:416::-;;27684:2;27673:9;27669:18;27661:26;;27734:9;27728:4;27724:20;27720:1;27709:9;27705:17;27698:47;27759:131;27885:4;27759:131;:::i;:::-;27751:139;;27655:245;;;:::o;27907:416::-;;28107:2;28096:9;28092:18;28084:26;;28157:9;28151:4;28147:20;28143:1;28132:9;28128:17;28121:47;28182:131;28308:4;28182:131;:::i;:::-;28174:139;;28078:245;;;:::o;28330:416::-;;28530:2;28519:9;28515:18;28507:26;;28580:9;28574:4;28570:20;28566:1;28555:9;28551:17;28544:47;28605:131;28731:4;28605:131;:::i;:::-;28597:139;;28501:245;;;:::o;28753:416::-;;28953:2;28942:9;28938:18;28930:26;;29003:9;28997:4;28993:20;28989:1;28978:9;28974:17;28967:47;29028:131;29154:4;29028:131;:::i;:::-;29020:139;;28924:245;;;:::o;29176:416::-;;29376:2;29365:9;29361:18;29353:26;;29426:9;29420:4;29416:20;29412:1;29401:9;29397:17;29390:47;29451:131;29577:4;29451:131;:::i;:::-;29443:139;;29347:245;;;:::o;29599:222::-;;29726:2;29715:9;29711:18;29703:26;;29740:71;29808:1;29797:9;29793:17;29784:6;29740:71;:::i;:::-;29697:124;;;;:::o;29828:333::-;;29983:2;29972:9;29968:18;29960:26;;29997:71;30065:1;30054:9;30050:17;30041:6;29997:71;:::i;:::-;30079:72;30147:2;30136:9;30132:18;30123:6;30079:72;:::i;:::-;29954:207;;;;;:::o;30168:321::-;;30317:2;30306:9;30302:18;30294:26;;30331:71;30399:1;30388:9;30384:17;30375:6;30331:71;:::i;:::-;30413:66;30475:2;30464:9;30460:18;30451:6;30413:66;:::i;:::-;30288:201;;;;;:::o;30496:856::-;;30777:3;30766:9;30762:19;30754:27;;30792:71;30860:1;30849:9;30845:17;30836:6;30792:71;:::i;:::-;30874:72;30942:2;30931:9;30927:18;30918:6;30874:72;:::i;:::-;30957;31025:2;31014:9;31010:18;31001:6;30957:72;:::i;:::-;31077:9;31071:4;31067:20;31062:2;31051:9;31047:18;31040:48;31102:78;31175:4;31166:6;31102:78;:::i;:::-;31094:86;;31191:73;31259:3;31248:9;31244:19;31235:6;31191:73;:::i;:::-;31275:67;31337:3;31326:9;31322:19;31313:6;31275:67;:::i;:::-;30748:604;;;;;;;;;:::o;31359:256::-;;31421:2;31415:9;31405:19;;31459:4;31451:6;31447:17;31558:6;31546:10;31543:22;31522:18;31510:10;31507:34;31504:62;31501:2;;;31579:1;31576;31569:12;31501:2;31599:10;31595:2;31588:22;31399:216;;;;:::o;31622:321::-;;31765:18;31757:6;31754:30;31751:2;;;31797:1;31794;31787:12;31751:2;31864:4;31860:9;31853:4;31845:6;31841:17;31837:33;31829:41;;31928:4;31922;31918:15;31910:23;;31688:255;;;:::o;31950:322::-;;32094:18;32086:6;32083:30;32080:2;;;32126:1;32123;32116:12;32080:2;32193:4;32189:9;32182:4;32174:6;32170:17;32166:33;32158:41;;32257:4;32251;32247:15;32239:23;;32017:255;;;:::o;32279:158::-;;32347:3;32339:11;;32384:3;32381:1;32374:14;32416:4;32413:1;32403:18;32395:26;;32333:104;;;:::o;32444:121::-;;32537:5;32531:12;32521:22;;32502:63;;;:::o;32572:122::-;;32666:5;32660:12;32650:22;;32631:63;;;:::o;32702:162::-;;32816:6;32811:3;32804:19;32853:4;32848:3;32844:14;32829:29;;32797:67;;;;:::o;32873:144::-;;33008:3;32993:18;;32986:31;;;;:::o;33026:163::-;;33141:6;33136:3;33129:19;33178:4;33173:3;33169:14;33154:29;;33122:67;;;;:::o;33198:145::-;;33334:3;33319:18;;33312:31;;;;:::o;33351:91::-;;33413:24;33431:5;33413:24;:::i;:::-;33402:35;;33396:46;;;:::o;33449:99::-;;33519:24;33537:5;33519:24;:::i;:::-;33508:35;;33502:46;;;:::o;33555:85::-;;33628:5;33621:13;33614:21;33603:32;;33597:43;;;:::o;33647:72::-;;33709:5;33698:16;;33692:27;;;:::o;33726:144::-;;33798:66;33791:5;33787:78;33776:89;;33770:100;;;:::o;33877:121::-;;33950:42;33943:5;33939:54;33928:65;;33922:76;;;:::o;34005:72::-;;34067:5;34056:16;;34050:27;;;:::o;34085:145::-;34166:6;34161:3;34156;34143:30;34222:1;34213:6;34208:3;34204:16;34197:27;34136:94;;;:::o;34239:268::-;34304:1;34311:101;34325:6;34322:1;34319:13;34311:101;;;34401:1;34396:3;34392:11;34386:18;34382:1;34377:3;34373:11;34366:39;34347:2;34344:1;34340:10;34335:15;;34311:101;;;34427:6;34424:1;34421:13;34418:2;;;34492:1;34483:6;34478:3;34474:16;34467:27;34418:2;34288:219;;;;:::o;34515:97::-;;34603:2;34599:7;34594:2;34587:5;34583:14;34579:28;34569:38;;34563:49;;;:::o;34620:117::-;34689:24;34707:5;34689:24;:::i;:::-;34682:5;34679:35;34669:2;;34728:1;34725;34718:12;34669:2;34663:74;:::o;34744:111::-;34810:21;34825:5;34810:21;:::i;:::-;34803:5;34800:32;34790:2;;34846:1;34843;34836:12;34790:2;34784:71;:::o;34862:117::-;34931:24;34949:5;34931:24;:::i;:::-;34924:5;34921:35;34911:2;;34970:1;34967;34960:12;34911:2;34905:74;:::o;34986:115::-;35054:23;35071:5;35054:23;:::i;:::-;35047:5;35044:34;35034:2;;35092:1;35089;35082:12;35034:2;35028:73;:::o;35108:117::-;35177:24;35195:5;35177:24;:::i;:::-;35170:5;35167:35;35157:2;;35216:1;35213;35206:12;35157:2;35151:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"./interfaces/IPriceConsumer.sol\";\nimport \"./interfaces/IPriceProducer.sol\";\nimport \"./interfaces/ITreasury.sol\";\nimport \"./interfaces/IPolicy.sol\";\n\ncontract Policy is Ownable, ERC721, IPriceConsumer, IPolicy {\n    using Counters for Counters.Counter;\n\n    event PolicyClaimed(address indexed holder, uint256 policyId, bool succees);\n\n    Counters.Counter private _tokenIdTracker;\n\n    ITreasury private _treasury;\n    IPriceProducer private _priceFetcher;\n\n    mapping(uint256 => PolicyData) public policies;\n    mapping(bytes32 => uint256) private _pendingRequests;\n\n    constructor(ITreasury treasury, IPriceProducer priceFetcher)\n        public\n        ERC721(\"Policy\", \"REPLC\")\n    {\n        _treasury = treasury;\n        _priceFetcher = priceFetcher;\n    }\n\n    function mintPolicy(address to, PolicyData memory data)\n        public\n        override\n        onlyOwner\n        returns (uint256 tokenId)\n    {\n        // We can just use balanceOf to create the new tokenId because tokens\n        // can be burned (destroyed), so we need a separate counter.\n        tokenId = _tokenIdTracker.current();\n        _mint(to, tokenId);\n        _tokenIdTracker.increment();\n        data.policyId = tokenId;\n        policies[tokenId] = data;\n        return tokenId;\n    }\n\n    function claim(uint256 policyId) public {\n        PolicyData storage policy = policies[policyId];\n        require(policy.active, \"The policy must be active\");\n        if (policy.end < block.timestamp) {\n            _burnPolicy(policyId);\n        } else {\n            bytes32 requestId = _priceFetcher.requestPrice(policy.externalCode);\n            _pendingRequests[requestId] = policyId;\n        }\n    }\n\n    function onPriceResponse(bytes32 requestId, uint256 currentPrice)\n        public\n        override\n    {\n        require(msg.sender == address(_priceFetcher), \"Access denied\");\n        uint256 policyId = _pendingRequests[requestId];\n        PolicyData storage policy = policies[policyId];\n        address holder = ownerOf(policyId);\n        if (policy.active && currentPrice < policy.strikePrice) {\n            _treasury.payoutEarmarked(policy.coverAmount, holder);\n            _burnPolicy(policyId);\n            emit PolicyClaimed(holder, policyId, true);\n        } else {\n            emit PolicyClaimed(holder, policyId, false);\n        }\n    }\n\n    function burnExpiredPolicy(uint256 policyId) external {\n        PolicyData storage policy = policies[policyId];\n        _treasury.releaseFunds(policy.coverAmount);\n        _burnPolicy(policyId);\n    }\n\n    function _burnPolicy(uint256 policyId) private {\n        _burn(policyId);\n        delete policies[policyId];\n    }\n}\n",
  "sourcePath": "/Policy.sol",
  "ast": {
    "absolutePath": "/Policy.sol",
    "exportedSymbols": {
      "Policy": [
        1070
      ]
    },
    "id": 1071,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 811,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:3"
      },
      {
        "id": 812,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 813,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 6783,
        "src": "99:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 814,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 4733,
        "src": "157:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 815,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 7220,
        "src": "210:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPriceConsumer.sol",
        "file": "./interfaces/IPriceConsumer.sol",
        "id": 816,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2259,
        "src": "263:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPriceProducer.sol",
        "file": "./interfaces/IPriceProducer.sol",
        "id": 817,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2270,
        "src": "305:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/ITreasury.sol",
        "file": "./interfaces/ITreasury.sol",
        "id": 818,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2326,
        "src": "347:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPolicy.sol",
        "file": "./interfaces/IPolicy.sol",
        "id": 819,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2237,
        "src": "384:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 820,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4732,
              "src": "439:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4732",
                "typeString": "contract Ownable"
              }
            },
            "id": 821,
            "nodeType": "InheritanceSpecifier",
            "src": "439:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 822,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6782,
              "src": "448:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6782",
                "typeString": "contract ERC721"
              }
            },
            "id": 823,
            "nodeType": "InheritanceSpecifier",
            "src": "448:6:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 824,
              "name": "IPriceConsumer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2258,
              "src": "456:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceConsumer_$2258",
                "typeString": "contract IPriceConsumer"
              }
            },
            "id": 825,
            "nodeType": "InheritanceSpecifier",
            "src": "456:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 826,
              "name": "IPolicy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2236,
              "src": "472:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPolicy_$2236",
                "typeString": "contract IPolicy"
              }
            },
            "id": 827,
            "nodeType": "InheritanceSpecifier",
            "src": "472:7:3"
          }
        ],
        "contractDependencies": [
          2236,
          2258,
          4340,
          4732,
          4789,
          4801,
          6782,
          6898,
          6929,
          6956
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1070,
        "linearizedBaseContracts": [
          1070,
          2236,
          2258,
          6782,
          6929,
          6956,
          6898,
          4789,
          4801,
          4732,
          4340
        ],
        "name": "Policy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 830,
            "libraryName": {
              "contractScope": null,
              "id": 828,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7219,
              "src": "492:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$7219",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "486:36:3",
            "typeName": {
              "contractScope": null,
              "id": 829,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7179,
              "src": "505:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$7179_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 838,
            "name": "PolicyClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "548:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "572:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "succees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "590:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:56:3"
            },
            "src": "528:76:3"
          },
          {
            "constant": false,
            "id": 840,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "610:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$7179_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 839,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7179,
              "src": "610:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$7179_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 842,
            "mutability": "mutable",
            "name": "_treasury",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "657:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITreasury_$2325",
              "typeString": "contract ITreasury"
            },
            "typeName": {
              "contractScope": null,
              "id": 841,
              "name": "ITreasury",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2325,
              "src": "657:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITreasury_$2325",
                "typeString": "contract ITreasury"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 844,
            "mutability": "mutable",
            "name": "_priceFetcher",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "690:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPriceProducer_$2269",
              "typeString": "contract IPriceProducer"
            },
            "typeName": {
              "contractScope": null,
              "id": 843,
              "name": "IPriceProducer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2269,
              "src": "690:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                "typeString": "contract IPriceProducer"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d3e89483",
            "id": 848,
            "mutability": "mutable",
            "name": "policies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "733:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
              "typeString": "mapping(uint256 => struct IPolicy.PolicyData)"
            },
            "typeName": {
              "id": 847,
              "keyType": {
                "id": 845,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "733:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                "typeString": "mapping(uint256 => struct IPolicy.PolicyData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 846,
                "name": "PolicyData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2226,
                "src": "752:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                  "typeString": "struct IPolicy.PolicyData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 852,
            "mutability": "mutable",
            "name": "_pendingRequests",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "785:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 851,
              "keyType": {
                "id": 849,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "785:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 850,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "804:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "958:75:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 863,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "968:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "980:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "src": "968:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "968:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 867,
                      "name": "_priceFetcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "998:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                        "typeString": "contract IPriceProducer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 868,
                      "name": "priceFetcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1014:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                        "typeString": "contract IPriceProducer"
                      }
                    },
                    "src": "998:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                      "typeString": "contract IPriceProducer"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "998:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 872,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "506f6c696379",
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "935:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f74795b92f70f3e669cc782c4d3eef2f287a644296402073b8566d4eabd6622a",
                      "typeString": "literal_string \"Policy\""
                    },
                    "value": "Policy"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5245504c43",
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "945:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_edf43c19718d494dd5e33a573708db38d3e6d12acf4e393d826c7fd99f252a88",
                      "typeString": "literal_string \"REPLC\""
                    },
                    "value": "REPLC"
                  }
                ],
                "id": 861,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 858,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6782,
                  "src": "928:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$6782_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "928:25:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 872,
                  "src": "856:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITreasury_$2325",
                    "typeString": "contract ITreasury"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 853,
                    "name": "ITreasury",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2325,
                    "src": "856:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "priceFetcher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 872,
                  "src": "876:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                    "typeString": "contract IPriceProducer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 855,
                    "name": "IPriceProducer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2269,
                    "src": "876:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                      "typeString": "contract IPriceProducer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "855:49:3"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:3"
            },
            "scope": 1070,
            "src": "844:189:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2235
            ],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "1183:355:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 884,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "1340:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "_tokenIdTracker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "1350:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$7179_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7190,
                        "src": "1350:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$7179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$7179_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1350:25:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 891,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "1391:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 892,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1395:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 890,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6518,
                      "src": "1385:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "1413:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$7179_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7202,
                      "src": "1413:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$7179_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$7179_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "1450:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                          "typeString": "struct IPolicy.PolicyData memory"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "policyId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2215,
                      "src": "1450:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 903,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "1466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1450:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "1483:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                          "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                        }
                      },
                      "id": 908,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1492:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1483:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                        "typeString": "struct IPolicy.PolicyData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 909,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "1503:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                        "typeString": "struct IPolicy.PolicyData memory"
                      }
                    },
                    "src": "1483:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 912,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 882,
                    "src": "1524:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 913,
                  "nodeType": "Return",
                  "src": "1517:14:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d501cc8",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 879,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4681,
                  "src": "1135:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1135:9:3"
              }
            ],
            "name": "mintPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 878,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1118:8:3"
            },
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1059:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1071:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                    "typeString": "struct IPolicy.PolicyData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 875,
                    "name": "PolicyData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2226,
                    "src": "1071:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                      "typeString": "struct IPolicy.PolicyData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1058:36:3"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1162:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:17:3"
            },
            "scope": 1070,
            "src": "1039:499:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "1584:363:3",
              "statements": [
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 958,
                      "src": "1594:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 920,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "1594:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 922,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "1622:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 924,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 923,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "1631:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1622:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1594:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 927,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1658:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2225,
                        "src": "1658:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520616374697665",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a31c8a96e1a047f6b2bc2e15bcb51cff1768887ac5b4d621bcb6f95d5cd4c232",
                          "typeString": "literal_string \"The policy must be active\""
                        },
                        "value": "The policy must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a31c8a96e1a047f6b2bc2e15bcb51cff1768887ac5b4d621bcb6f95d5cd4c232",
                          "typeString": "literal_string \"The policy must be active\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:51:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "1715:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "1715:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1728:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1728:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1715:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "1797:144:3",
                    "statements": [
                      {
                        "assignments": [
                          943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 943,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 956,
                            "src": "1811:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 942,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 949,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 946,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "1858:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                                  "typeString": "struct IPolicy.PolicyData storage pointer"
                                }
                              },
                              "id": 947,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "externalCode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2221,
                              "src": "1858:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 944,
                              "name": "_priceFetcher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "1831:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            },
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requestPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "1831:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) external returns (bytes32)"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1831:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1811:67:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 950,
                              "name": "_pendingRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1892:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 952,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 951,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "1909:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1892:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 953,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "1922:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1892:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 955,
                        "nodeType": "ExpressionStatement",
                        "src": "1892:38:3"
                      }
                    ]
                  },
                  "id": 957,
                  "nodeType": "IfStatement",
                  "src": "1711:230:3",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "1745:46:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 938,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "1771:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 937,
                            "name": "_burnPolicy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "1759:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1759:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "ExpressionStatement",
                        "src": "1759:21:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "379607f5",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 959,
                  "src": "1559:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:18:3"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:0:3"
            },
            "scope": 1070,
            "src": "1544:403:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2257
            ],
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "2055:543:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 968,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2073:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2073:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 972,
                              "name": "_priceFetcher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "2095:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            ],
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2087:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 970,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2087:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2087:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2073:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732064656e696564",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3b095ce8a187ba18763b60884a0b2572625313b25caa4e4b1731b365d9f46da",
                          "typeString": "literal_string \"Access denied\""
                        },
                        "value": "Access denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3b095ce8a187ba18763b60884a0b2572625313b25caa4e4b1731b365d9f46da",
                          "typeString": "literal_string \"Access denied\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2065:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:62:3"
                },
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "policyId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2137:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2137:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 980,
                      "name": "_pendingRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "2156:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 982,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 981,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "2173:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2156:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2137:46:3"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2193:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 984,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "2193:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 989,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 986,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "2221:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 988,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 987,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "2230:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2221:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2193:46:3"
                },
                {
                  "assignments": [
                    991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "holder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2249:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 995,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 993,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "2274:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 992,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5999,
                      "src": "2266:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2249:34:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 996,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2297:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData storage pointer"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2225,
                      "src": "2297:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "currentPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "2314:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 999,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "2329:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strikePrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2223,
                        "src": "2329:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2314:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2297:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "2524:68:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1023,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2557:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1024,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2565:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2575:5:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1022,
                            "name": "PolicyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2543:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2543:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1027,
                        "nodeType": "EmitStatement",
                        "src": "2538:43:3"
                      }
                    ]
                  },
                  "id": 1029,
                  "nodeType": "IfStatement",
                  "src": "2293:299:3",
                  "trueBody": {
                    "id": 1021,
                    "nodeType": "Block",
                    "src": "2349:169:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1006,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "2389:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                                  "typeString": "struct IPolicy.PolicyData storage pointer"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coverAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2217,
                              "src": "2389:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1008,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2409:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1003,
                              "name": "_treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "2363:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITreasury_$2325",
                                "typeString": "contract ITreasury"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payoutEarmarked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2307,
                            "src": "2363:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2363:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "2363:53:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1012,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2442:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1011,
                            "name": "_burnPolicy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "2430:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1014,
                        "nodeType": "ExpressionStatement",
                        "src": "2430:21:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1016,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2484:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1017,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2492:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2502:4:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1015,
                            "name": "PolicyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2470:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2470:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1020,
                        "nodeType": "EmitStatement",
                        "src": "2465:42:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c1c1f85a",
            "id": 1031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onPriceResponse",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:3"
            },
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1031,
                  "src": "1978:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "currentPrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1031,
                  "src": "1997:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1977:41:3"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:3"
            },
            "scope": 1070,
            "src": "1953:645:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "2658:146:3",
              "statements": [
                {
                  "assignments": [
                    1037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1037,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1053,
                      "src": "2668:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1036,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "2668:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1041,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "2696:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 1040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "2705:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2696:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2668:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1045,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "2747:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "coverAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2217,
                        "src": "2747:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1042,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "2724:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2281,
                      "src": "2724:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "2788:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1049,
                      "name": "_burnPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "2776:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:21:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "60fe02f9",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1054,
                  "src": "2631:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2630:18:3"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:3"
            },
            "scope": 1070,
            "src": "2604:200:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "2857:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "2873:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1059,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6586,
                      "src": "2867:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "2867:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2892:25:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "2899:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                          "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "2908:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2899:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                        "typeString": "struct IPolicy.PolicyData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "2831:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2830:18:3"
            },
            "returnParameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2857:0:3"
            },
            "scope": 1070,
            "src": "2810:114:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1071,
        "src": "420:2506:3"
      }
    ],
    "src": "32:2895:3"
  },
  "legacyAST": {
    "absolutePath": "/Policy.sol",
    "exportedSymbols": {
      "Policy": [
        1070
      ]
    },
    "id": 1071,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 811,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:3"
      },
      {
        "id": 812,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 813,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 6783,
        "src": "99:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 814,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 4733,
        "src": "157:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 815,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 7220,
        "src": "210:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPriceConsumer.sol",
        "file": "./interfaces/IPriceConsumer.sol",
        "id": 816,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2259,
        "src": "263:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPriceProducer.sol",
        "file": "./interfaces/IPriceProducer.sol",
        "id": 817,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2270,
        "src": "305:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/ITreasury.sol",
        "file": "./interfaces/ITreasury.sol",
        "id": 818,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2326,
        "src": "347:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/IPolicy.sol",
        "file": "./interfaces/IPolicy.sol",
        "id": 819,
        "nodeType": "ImportDirective",
        "scope": 1071,
        "sourceUnit": 2237,
        "src": "384:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 820,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4732,
              "src": "439:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4732",
                "typeString": "contract Ownable"
              }
            },
            "id": 821,
            "nodeType": "InheritanceSpecifier",
            "src": "439:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 822,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6782,
              "src": "448:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6782",
                "typeString": "contract ERC721"
              }
            },
            "id": 823,
            "nodeType": "InheritanceSpecifier",
            "src": "448:6:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 824,
              "name": "IPriceConsumer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2258,
              "src": "456:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceConsumer_$2258",
                "typeString": "contract IPriceConsumer"
              }
            },
            "id": 825,
            "nodeType": "InheritanceSpecifier",
            "src": "456:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 826,
              "name": "IPolicy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2236,
              "src": "472:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPolicy_$2236",
                "typeString": "contract IPolicy"
              }
            },
            "id": 827,
            "nodeType": "InheritanceSpecifier",
            "src": "472:7:3"
          }
        ],
        "contractDependencies": [
          2236,
          2258,
          4340,
          4732,
          4789,
          4801,
          6782,
          6898,
          6929,
          6956
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1070,
        "linearizedBaseContracts": [
          1070,
          2236,
          2258,
          6782,
          6929,
          6956,
          6898,
          4789,
          4801,
          4732,
          4340
        ],
        "name": "Policy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 830,
            "libraryName": {
              "contractScope": null,
              "id": 828,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7219,
              "src": "492:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$7219",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "486:36:3",
            "typeName": {
              "contractScope": null,
              "id": 829,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7179,
              "src": "505:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$7179_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 838,
            "name": "PolicyClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "548:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "572:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "succees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "590:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:56:3"
            },
            "src": "528:76:3"
          },
          {
            "constant": false,
            "id": 840,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "610:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$7179_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 839,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7179,
              "src": "610:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$7179_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 842,
            "mutability": "mutable",
            "name": "_treasury",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "657:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITreasury_$2325",
              "typeString": "contract ITreasury"
            },
            "typeName": {
              "contractScope": null,
              "id": 841,
              "name": "ITreasury",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2325,
              "src": "657:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITreasury_$2325",
                "typeString": "contract ITreasury"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 844,
            "mutability": "mutable",
            "name": "_priceFetcher",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "690:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPriceProducer_$2269",
              "typeString": "contract IPriceProducer"
            },
            "typeName": {
              "contractScope": null,
              "id": 843,
              "name": "IPriceProducer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2269,
              "src": "690:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                "typeString": "contract IPriceProducer"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d3e89483",
            "id": 848,
            "mutability": "mutable",
            "name": "policies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "733:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
              "typeString": "mapping(uint256 => struct IPolicy.PolicyData)"
            },
            "typeName": {
              "id": 847,
              "keyType": {
                "id": 845,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "733:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                "typeString": "mapping(uint256 => struct IPolicy.PolicyData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 846,
                "name": "PolicyData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2226,
                "src": "752:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                  "typeString": "struct IPolicy.PolicyData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 852,
            "mutability": "mutable",
            "name": "_pendingRequests",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1070,
            "src": "785:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 851,
              "keyType": {
                "id": 849,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "785:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 850,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "804:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "958:75:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 863,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "968:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "980:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "src": "968:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "968:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 867,
                      "name": "_priceFetcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "998:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                        "typeString": "contract IPriceProducer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 868,
                      "name": "priceFetcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "1014:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                        "typeString": "contract IPriceProducer"
                      }
                    },
                    "src": "998:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                      "typeString": "contract IPriceProducer"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "998:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 872,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "506f6c696379",
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "935:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f74795b92f70f3e669cc782c4d3eef2f287a644296402073b8566d4eabd6622a",
                      "typeString": "literal_string \"Policy\""
                    },
                    "value": "Policy"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5245504c43",
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "945:7:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_edf43c19718d494dd5e33a573708db38d3e6d12acf4e393d826c7fd99f252a88",
                      "typeString": "literal_string \"REPLC\""
                    },
                    "value": "REPLC"
                  }
                ],
                "id": 861,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 858,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6782,
                  "src": "928:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$6782_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "928:25:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 872,
                  "src": "856:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITreasury_$2325",
                    "typeString": "contract ITreasury"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 853,
                    "name": "ITreasury",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2325,
                    "src": "856:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "priceFetcher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 872,
                  "src": "876:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                    "typeString": "contract IPriceProducer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 855,
                    "name": "IPriceProducer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2269,
                    "src": "876:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                      "typeString": "contract IPriceProducer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "855:49:3"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:3"
            },
            "scope": 1070,
            "src": "844:189:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2235
            ],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "1183:355:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 884,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "1340:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "_tokenIdTracker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "1350:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$7179_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7190,
                        "src": "1350:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$7179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$7179_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1350:25:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 891,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "1391:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 892,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1395:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 890,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6518,
                      "src": "1385:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "1413:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$7179_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7202,
                      "src": "1413:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$7179_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$7179_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "1450:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                          "typeString": "struct IPolicy.PolicyData memory"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "policyId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2215,
                      "src": "1450:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 903,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "1466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1450:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "1483:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                          "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                        }
                      },
                      "id": 908,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1492:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1483:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                        "typeString": "struct IPolicy.PolicyData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 909,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "1503:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                        "typeString": "struct IPolicy.PolicyData memory"
                      }
                    },
                    "src": "1483:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 912,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 882,
                    "src": "1524:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 913,
                  "nodeType": "Return",
                  "src": "1517:14:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d501cc8",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 879,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4681,
                  "src": "1135:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1135:9:3"
              }
            ],
            "name": "mintPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 878,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1118:8:3"
            },
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1059:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1071:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyData_$2226_memory_ptr",
                    "typeString": "struct IPolicy.PolicyData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 875,
                    "name": "PolicyData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2226,
                    "src": "1071:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                      "typeString": "struct IPolicy.PolicyData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1058:36:3"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 915,
                  "src": "1162:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:17:3"
            },
            "scope": 1070,
            "src": "1039:499:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "1584:363:3",
              "statements": [
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 958,
                      "src": "1594:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 920,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "1594:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 922,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "1622:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 924,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 923,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "1631:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1622:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1594:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 927,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "1658:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2225,
                        "src": "1658:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520616374697665",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a31c8a96e1a047f6b2bc2e15bcb51cff1768887ac5b4d621bcb6f95d5cd4c232",
                          "typeString": "literal_string \"The policy must be active\""
                        },
                        "value": "The policy must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a31c8a96e1a047f6b2bc2e15bcb51cff1768887ac5b4d621bcb6f95d5cd4c232",
                          "typeString": "literal_string \"The policy must be active\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:51:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "1715:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "1715:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1728:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1728:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1715:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "1797:144:3",
                    "statements": [
                      {
                        "assignments": [
                          943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 943,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 956,
                            "src": "1811:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 942,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 949,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 946,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "1858:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                                  "typeString": "struct IPolicy.PolicyData storage pointer"
                                }
                              },
                              "id": 947,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "externalCode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2221,
                              "src": "1858:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 944,
                              "name": "_priceFetcher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "1831:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            },
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requestPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "1831:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) external returns (bytes32)"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1831:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1811:67:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 950,
                              "name": "_pendingRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1892:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 952,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 951,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "1909:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1892:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 953,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "1922:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1892:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 955,
                        "nodeType": "ExpressionStatement",
                        "src": "1892:38:3"
                      }
                    ]
                  },
                  "id": 957,
                  "nodeType": "IfStatement",
                  "src": "1711:230:3",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "1745:46:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 938,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "1771:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 937,
                            "name": "_burnPolicy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "1759:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1759:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "ExpressionStatement",
                        "src": "1759:21:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "379607f5",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 959,
                  "src": "1559:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:18:3"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:0:3"
            },
            "scope": 1070,
            "src": "1544:403:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2257
            ],
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "2055:543:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 968,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2073:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2073:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 972,
                              "name": "_priceFetcher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "2095:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPriceProducer_$2269",
                                "typeString": "contract IPriceProducer"
                              }
                            ],
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2087:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 970,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2087:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2087:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2073:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732064656e696564",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3b095ce8a187ba18763b60884a0b2572625313b25caa4e4b1731b365d9f46da",
                          "typeString": "literal_string \"Access denied\""
                        },
                        "value": "Access denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3b095ce8a187ba18763b60884a0b2572625313b25caa4e4b1731b365d9f46da",
                          "typeString": "literal_string \"Access denied\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2065:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:62:3"
                },
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "policyId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2137:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2137:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 980,
                      "name": "_pendingRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "2156:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 982,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 981,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "2173:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2156:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2137:46:3"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2193:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 984,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "2193:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 989,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 986,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "2221:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 988,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 987,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "2230:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2221:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2193:46:3"
                },
                {
                  "assignments": [
                    991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "holder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1030,
                      "src": "2249:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 995,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 993,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "2274:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 992,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5999,
                      "src": "2266:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2249:34:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 996,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2297:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData storage pointer"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2225,
                      "src": "2297:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "currentPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "2314:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 999,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "2329:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strikePrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2223,
                        "src": "2329:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2314:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2297:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "2524:68:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1023,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2557:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1024,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2565:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2575:5:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1022,
                            "name": "PolicyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2543:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2543:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1027,
                        "nodeType": "EmitStatement",
                        "src": "2538:43:3"
                      }
                    ]
                  },
                  "id": 1029,
                  "nodeType": "IfStatement",
                  "src": "2293:299:3",
                  "trueBody": {
                    "id": 1021,
                    "nodeType": "Block",
                    "src": "2349:169:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1006,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "2389:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                                  "typeString": "struct IPolicy.PolicyData storage pointer"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coverAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2217,
                              "src": "2389:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1008,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2409:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1003,
                              "name": "_treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "2363:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITreasury_$2325",
                                "typeString": "contract ITreasury"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payoutEarmarked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2307,
                            "src": "2363:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2363:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "2363:53:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1012,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2442:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1011,
                            "name": "_burnPolicy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "2430:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1014,
                        "nodeType": "ExpressionStatement",
                        "src": "2430:21:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1016,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "2484:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1017,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "2492:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2502:4:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1015,
                            "name": "PolicyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2470:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2470:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1020,
                        "nodeType": "EmitStatement",
                        "src": "2465:42:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c1c1f85a",
            "id": 1031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onPriceResponse",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:3"
            },
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1031,
                  "src": "1978:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "currentPrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1031,
                  "src": "1997:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1977:41:3"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:3"
            },
            "scope": 1070,
            "src": "1953:645:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "2658:146:3",
              "statements": [
                {
                  "assignments": [
                    1037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1037,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1053,
                      "src": "2668:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                        "typeString": "struct IPolicy.PolicyData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1036,
                        "name": "PolicyData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2226,
                        "src": "2668:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                          "typeString": "struct IPolicy.PolicyData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1041,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "2696:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                        "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                      }
                    },
                    "id": 1040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "2705:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2696:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                      "typeString": "struct IPolicy.PolicyData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2668:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1045,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "2747:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyData_$2226_storage_ptr",
                            "typeString": "struct IPolicy.PolicyData storage pointer"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "coverAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2217,
                        "src": "2747:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1042,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "2724:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2281,
                      "src": "2724:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "2788:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1049,
                      "name": "_burnPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "2776:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:21:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "60fe02f9",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1054,
                  "src": "2631:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2630:18:3"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:3"
            },
            "scope": 1070,
            "src": "2604:200:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "2857:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "2873:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1059,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6586,
                      "src": "2867:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "2867:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2892:25:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "2899:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyData_$2226_storage_$",
                          "typeString": "mapping(uint256 => struct IPolicy.PolicyData storage ref)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "2908:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2899:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyData_$2226_storage",
                        "typeString": "struct IPolicy.PolicyData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "2831:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2830:18:3"
            },
            "returnParameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2857:0:3"
            },
            "scope": 1070,
            "src": "2810:114:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1071,
        "src": "420:2506:3"
      }
    ],
    "src": "32:2895:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "succees",
              "type": "bool"
            }
          ],
          "name": "PolicyClaimed",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xAae3783692a5E22A80e23c200E05b81C9882d213",
      "transactionHash": "0x6666ab5d1a17b37d0f3aa8b339d9cac8361818250bdb37baec6ef590af111a8d"
    },
    "1337": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "succees",
              "type": "bool"
            }
          ],
          "name": "PolicyClaimed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x344283e20Ef3F66b3e194AcF188e14BD6ACbc293",
      "transactionHash": "0xf484b234a2acd85fceedbaf9c28d03b303f8abb87cbc9d3e8776918552d68cbf"
    },
    "1601123645090": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x9807d4727ae6308b32cd43219b52031088c7bad64a9936c1afaf6df0c6ce723d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "succees",
              "type": "bool"
            }
          ],
          "name": "PolicyClaimed",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2D3D3D32e5203cB1918013ED8F0ac1B755f10022",
      "transactionHash": "0x62660cadd8d3f92b91823b33020a44d226b4b369351bceeb0307b1453ffc780f"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-09-27T15:52:52.650Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
