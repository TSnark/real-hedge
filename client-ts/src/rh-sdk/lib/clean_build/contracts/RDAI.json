{
  "contractName": "RDAI",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "dai",
          "type": "address"
        },
        {
          "internalType": "contract ITreasury",
          "name": "treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"dai\",\"type\":\"address\"},{\"internalType\":\"contract ITreasury\",\"name\":\"treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/RDAI.sol\":\"RDAI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/RDAI.sol\":{\"keccak256\":\"0x40e663c0cfdf06342cdfd65b24d26a77ca6eb678a3f7afb6f401905b04ce42ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490e28e415eea72f7acf4c4e2543fbb9bc56ed80b6f728f900e006bb114aad06\",\"dweb:/ipfs/QmUrHsShefNGmWv5wcFEnFGV58ikg8m7YBMDcQYcwKRXYK\"]},\"/interfaces/ITreasury.sol\":{\"keccak256\":\"0x71dba43dfbc2352747a1d80d135d9b8d73294f2356f685fc79414c0a4fb63449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eea96c35dc0e2a3b02d76d940c2687225305e938adce356a5921e6c4dec9d18d\",\"dweb:/ipfs/QmbVoVKPTmvdKurumHjd6VYwKjkG8AgAcuBd3ZGmzgfFKX\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003248380380620032488339818101604052810190620000379190620006f1565b6040518060400160405280600e81526020017f5265616c204865646765204441490000000000000000000000000000000000008152506040518060400160405280600481526020017f72444149000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620005c3565b508060049080519060200190620000d4929190620005c3565b506012600560006101000a81548160ff021916908360ff160217905550505080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166200021360201b62000d89179092919060201c565b505062000b5a565b6000811480620002b3575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016200025d92919062000923565b60206040518083038186803b1580156200027657600080fd5b505afa1580156200028b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b1919062000732565b145b620002f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ec90620009e5565b60405180910390fd5b620003808363095ea7b360e01b84846040516024016200031792919062000950565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200038560201b60201c565b505050565b6060620003ee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166200045960201b62000ee7179092919060201c565b9050600081511115620004545780806020019051810190620004119190620006c5565b62000453576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200044a90620009c3565b60405180910390fd5b5b505050565b60606200047084846000856200047960201b60201c565b90509392505050565b60606200048c85620005b060201b60201c565b620004ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004c590620009a1565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff168587604051620004fa91906200090a565b60006040518083038185875af1925050503d806000811462000539576040519150601f19603f3d011682016040523d82523d6000602084013e6200053e565b606091505b5091509150811562000555578092505050620005a8565b600081511115620005695780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059f91906200097d565b60405180910390fd5b949350505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200060657805160ff191683800117855562000637565b8280016001018555821562000637579182015b828111156200063657825182559160200191906001019062000619565b5b5090506200064691906200064a565b5090565b5b80821115620006655760008160009055506001016200064b565b5090565b6000815190506200067a8162000af2565b92915050565b600081519050620006918162000b0c565b92915050565b600081519050620006a88162000b26565b92915050565b600081519050620006bf8162000b40565b92915050565b600060208284031215620006d857600080fd5b6000620006e88482850162000669565b91505092915050565b600080604083850312156200070557600080fd5b6000620007158582860162000680565b9250506020620007288582860162000697565b9150509250929050565b6000602082840312156200074557600080fd5b60006200075584828501620006ae565b91505092915050565b620007698162000a39565b82525050565b60006200077c8262000a07565b62000788818562000a1d565b93506200079a81856020860162000aab565b80840191505092915050565b6000620007b38262000a12565b620007bf818562000a28565b9350620007d181856020860162000aab565b620007dc8162000ae1565b840191505092915050565b6000620007f6601d8362000a28565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b600062000838602a8362000a28565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000620008a060368362000a28565b91507f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008301527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006020830152604082019050919050565b620009048162000aa1565b82525050565b60006200091882846200076f565b915081905092915050565b60006040820190506200093a60008301856200075e565b6200094960208301846200075e565b9392505050565b60006040820190506200096760008301856200075e565b620009766020830184620008f9565b9392505050565b60006020820190508181036000830152620009998184620007a6565b905092915050565b60006020820190508181036000830152620009bc81620007e7565b9050919050565b60006020820190508181036000830152620009de8162000829565b9050919050565b6000602082019050818103600083015262000a008162000891565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600062000a468262000a81565b9050919050565b60008115159050919050565b600062000a668262000a39565b9050919050565b600062000a7a8262000a39565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000acb57808201518184015260208101905062000aae565b8381111562000adb576000848401525b50505050565b6000601f19601f8301169050919050565b62000afd8162000a4d565b811462000b0957600080fd5b50565b62000b178162000a59565b811462000b2357600080fd5b50565b62000b318162000a6d565b811462000b3d57600080fd5b50565b62000b4b8162000aa1565b811462000b5757600080fd5b50565b6126de8062000b6a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342966c68116100a257806395d89b411161007157806395d89b41146102ba578063a457c2d7146102d8578063a9059cbb14610308578063b6b55f2514610338578063dd62ed3e146103545761010b565b806342966c681461023457806370a082311461025057806377c7b8fc1461028057806379cc67901461029e5761010b565b806323b872dd116100de57806323b872dd1461019a5780632e1a7d4d146101ca578063313ce567146101e657806339509351146102045761010b565b806306fdde0314610110578063095ea7b31461012e57806316f0115b1461015e57806318160ddd1461017c575b600080fd5b610118610384565b6040516101259190612268565b60405180910390f35b61014860048036038101906101439190611bc8565b610426565b604051610155919061224d565b60405180910390f35b610166610444565b604051610173919061244a565b60405180910390f35b61018461044a565b604051610191919061244a565b60405180910390f35b6101b460048036038101906101af9190611b79565b610454565b6040516101c1919061224d565b60405180910390f35b6101e460048036038101906101df9190611c2d565b61052d565b005b6101ee610733565b6040516101fb919061248e565b60405180910390f35b61021e60048036038101906102199190611bc8565b61074a565b60405161022b919061224d565b60405180910390f35b61024e60048036038101906102499190611c2d565b6107fd565b005b61026a60048036038101906102659190611b14565b610811565b604051610277919061244a565b60405180910390f35b610288610859565b604051610295919061244a565b60405180910390f35b6102b860048036038101906102b39190611bc8565b610938565b005b6102c261099a565b6040516102cf9190612268565b60405180910390f35b6102f260048036038101906102ed9190611bc8565b610a3c565b6040516102ff919061224d565b60405180910390f35b610322600480360381019061031d9190611bc8565b610b09565b60405161032f919061224d565b60405180910390f35b610352600480360381019061034d9190611c2d565b610b27565b005b61036e60048036038101906103699190611b3d565b610d02565b60405161037b919061244a565b60405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b5050505050905090565b600061043a610433610eff565b8484610f07565b6001905092915050565b60075481565b6000600254905090565b60006104618484846110d2565b6105228461046d610eff565b61051d8560405180606001604052806028815260200161263860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104d3610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b610f07565b600190509392505050565b60008111610570576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105679061230a565b60405180910390fd5b600061057b33610811565b9050808211156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b7906122ea565b60405180910390fd5b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062a57600080fd5b505afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190611c56565b9050600061069261067161044a565b61068486856113c290919063ffffffff16565b61143290919063ffffffff16565b905061069e338561147c565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be95e01a82336040518363ffffffff1660e01b81526004016106fb929190612465565b600060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b5050505050505050565b6000600560009054906101000a900460ff16905090565b60006107f3610757610eff565b846107ee8560016000610768610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b610f07565b6001905092915050565b61080e610808610eff565b8261147c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190611c56565b905061093261090961044a565b610924670de0b6b3a7640000846113c290919063ffffffff16565b61143290919063ffffffff16565b91505090565b6000610977826040518060600160405280602481526020016126606024913961096886610963610eff565b610d02565b6113679092919063ffffffff16565b905061098b83610985610eff565b83610f07565b610995838361147c565b505050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b5050505050905090565b6000610aff610a49610eff565b84610afa856040518060600160405280602581526020016126846025913960016000610a73610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b610f07565b6001905092915050565b6000610b1d610b16610eff565b84846110d2565b6001905092915050565b60008111610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b619061234a565b60405180910390fd5b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd457600080fd5b505afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190611c56565b9050600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e553f6583336040518363ffffffff1660e01b8152600401610c6b929190612465565b600060405180830381600087803b158015610c8557600080fd5b505af1158015610c99573d6000803e3d6000fd5b50505050600080821415610cc457829050610cbd828461162a90919063ffffffff16565b9150610cf3565b610cf082610ce2610cd361044a565b866113c290919063ffffffff16565b61143290919063ffffffff16565b90505b610cfd338261167f565b505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000811480610e22575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610dd09291906121fb565b60206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611c56565b145b610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e589061240a565b60405180910390fd5b610ee28363095ea7b360e01b8484604051602401610e80929190612224565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611813565b505050565b6060610ef684846000856118da565b90509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e906123aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde906122aa565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110c5919061244a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611142576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111399061238a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a99061228a565b60405180910390fd5b6111bd8383836119fd565b61122881604051806060016040528060268152602001612612602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112bb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161135a919061244a565b60405180910390a3505050565b60008383111582906113af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a69190612268565b60405180910390fd5b5060008385039050809150509392505050565b6000808314156113d5576000905061142c565b60008284029050828482816113e657fe5b0414611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e9061232a565b60405180910390fd5b809150505b92915050565b600061147483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611a02565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e39061236a565b60405180910390fd5b6114f8826000836119fd565b611563816040518060600160405280602281526020016125f0602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600254611a6390919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161161e919061244a565b60405180910390a35050565b600080828401905083811015611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166c906122ca565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e69061242a565b60405180910390fd5b6116fb600083836119fd565b6117108160025461162a90919063ffffffff16565b600281905550611767816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611807919061244a565b60405180910390a35050565b6060611875826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ee79092919063ffffffff16565b90506000815111156118d557808060200190518101906118959190611c04565b6118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb906123ea565b60405180910390fd5b5b505050565b60606118e585611aad565b611924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191b906123ca565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff16858760405161194e91906121e4565b60006040518083038185875af1925050503d806000811461198b576040519150601f19603f3d011682016040523d82523d6000602084013e611990565b606091505b509150915081156119a55780925050506119f5565b6000815111156119b85780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ec9190612268565b60405180910390fd5b949350505050565b505050565b60008083118290611a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a409190612268565b60405180910390fd5b506000838581611a5557fe5b049050809150509392505050565b6000611aa583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611367565b905092915050565b600080823b905060008111915050919050565b600081359050611acf816125aa565b92915050565b600081519050611ae4816125c1565b92915050565b600081359050611af9816125d8565b92915050565b600081519050611b0e816125d8565b92915050565b600060208284031215611b2657600080fd5b6000611b3484828501611ac0565b91505092915050565b60008060408385031215611b5057600080fd5b6000611b5e85828601611ac0565b9250506020611b6f85828601611ac0565b9150509250929050565b600080600060608486031215611b8e57600080fd5b6000611b9c86828701611ac0565b9350506020611bad86828701611ac0565b9250506040611bbe86828701611aea565b9150509250925092565b60008060408385031215611bdb57600080fd5b6000611be985828601611ac0565b9250506020611bfa85828601611aea565b9150509250929050565b600060208284031215611c1657600080fd5b6000611c2484828501611ad5565b91505092915050565b600060208284031215611c3f57600080fd5b6000611c4d84828501611aea565b91505092915050565b600060208284031215611c6857600080fd5b6000611c7684828501611aff565b91505092915050565b611c8881612530565b82525050565b611c97816124db565b82525050565b611ca6816124ed565b82525050565b6000611cb7826124a9565b611cc181856124bf565b9350611cd1818560208601612566565b80840191505092915050565b6000611ce8826124b4565b611cf281856124ca565b9350611d02818560208601612566565b611d0b81612599565b840191505092915050565b6000611d236023836124ca565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d896022836124ca565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611def601b836124ca565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611e2f6014836124ca565b91507f496e73756666696369656e742062616c616e63650000000000000000000000006000830152602082019050919050565b6000611e6f601f836124ca565b91507f5769746864726177206d7573742062652067726561746572207468616e2030006000830152602082019050919050565b6000611eaf6021836124ca565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f15601e836124ca565b91507f4465706f736974206d7573742062652067726561746572207468616e203000006000830152602082019050919050565b6000611f556021836124ca565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fbb6025836124ca565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120216024836124ca565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612087601d836124ca565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006120c7602a836124ca565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b600061212d6036836124ca565b91507f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008301527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006020830152604082019050919050565b6000612193601f836124ca565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6121cf81612519565b82525050565b6121de81612523565b82525050565b60006121f08284611cac565b915081905092915050565b60006040820190506122106000830185611c8e565b61221d6020830184611c8e565b9392505050565b60006040820190506122396000830185611c8e565b61224660208301846121c6565b9392505050565b60006020820190506122626000830184611c9d565b92915050565b600060208201905081810360008301526122828184611cdd565b905092915050565b600060208201905081810360008301526122a381611d16565b9050919050565b600060208201905081810360008301526122c381611d7c565b9050919050565b600060208201905081810360008301526122e381611de2565b9050919050565b6000602082019050818103600083015261230381611e22565b9050919050565b6000602082019050818103600083015261232381611e62565b9050919050565b6000602082019050818103600083015261234381611ea2565b9050919050565b6000602082019050818103600083015261236381611f08565b9050919050565b6000602082019050818103600083015261238381611f48565b9050919050565b600060208201905081810360008301526123a381611fae565b9050919050565b600060208201905081810360008301526123c381612014565b9050919050565b600060208201905081810360008301526123e38161207a565b9050919050565b60006020820190508181036000830152612403816120ba565b9050919050565b6000602082019050818103600083015261242381612120565b9050919050565b6000602082019050818103600083015261244381612186565b9050919050565b600060208201905061245f60008301846121c6565b92915050565b600060408201905061247a60008301856121c6565b6124876020830184611c7f565b9392505050565b60006020820190506124a360008301846121d5565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006124e6826124f9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061253b82612542565b9050919050565b600061254d82612554565b9050919050565b600061255f826124f9565b9050919050565b60005b83811015612584578082015181840152602081019050612569565b83811115612593576000848401525b50505050565b6000601f19601f8301169050919050565b6125b3816124db565b81146125be57600080fd5b50565b6125ca816124ed565b81146125d557600080fd5b50565b6125e181612519565b81146125ec57600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b63058ec92e353e684493654e9c577a18859c3be19a3820de5b53a3bf7490afb64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806342966c68116100a257806395d89b411161007157806395d89b41146102ba578063a457c2d7146102d8578063a9059cbb14610308578063b6b55f2514610338578063dd62ed3e146103545761010b565b806342966c681461023457806370a082311461025057806377c7b8fc1461028057806379cc67901461029e5761010b565b806323b872dd116100de57806323b872dd1461019a5780632e1a7d4d146101ca578063313ce567146101e657806339509351146102045761010b565b806306fdde0314610110578063095ea7b31461012e57806316f0115b1461015e57806318160ddd1461017c575b600080fd5b610118610384565b6040516101259190612268565b60405180910390f35b61014860048036038101906101439190611bc8565b610426565b604051610155919061224d565b60405180910390f35b610166610444565b604051610173919061244a565b60405180910390f35b61018461044a565b604051610191919061244a565b60405180910390f35b6101b460048036038101906101af9190611b79565b610454565b6040516101c1919061224d565b60405180910390f35b6101e460048036038101906101df9190611c2d565b61052d565b005b6101ee610733565b6040516101fb919061248e565b60405180910390f35b61021e60048036038101906102199190611bc8565b61074a565b60405161022b919061224d565b60405180910390f35b61024e60048036038101906102499190611c2d565b6107fd565b005b61026a60048036038101906102659190611b14565b610811565b604051610277919061244a565b60405180910390f35b610288610859565b604051610295919061244a565b60405180910390f35b6102b860048036038101906102b39190611bc8565b610938565b005b6102c261099a565b6040516102cf9190612268565b60405180910390f35b6102f260048036038101906102ed9190611bc8565b610a3c565b6040516102ff919061224d565b60405180910390f35b610322600480360381019061031d9190611bc8565b610b09565b60405161032f919061224d565b60405180910390f35b610352600480360381019061034d9190611c2d565b610b27565b005b61036e60048036038101906103699190611b3d565b610d02565b60405161037b919061244a565b60405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b5050505050905090565b600061043a610433610eff565b8484610f07565b6001905092915050565b60075481565b6000600254905090565b60006104618484846110d2565b6105228461046d610eff565b61051d8560405180606001604052806028815260200161263860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104d3610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b610f07565b600190509392505050565b60008111610570576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105679061230a565b60405180910390fd5b600061057b33610811565b9050808211156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b7906122ea565b60405180910390fd5b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062a57600080fd5b505afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190611c56565b9050600061069261067161044a565b61068486856113c290919063ffffffff16565b61143290919063ffffffff16565b905061069e338561147c565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be95e01a82336040518363ffffffff1660e01b81526004016106fb929190612465565b600060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b5050505050505050565b6000600560009054906101000a900460ff16905090565b60006107f3610757610eff565b846107ee8560016000610768610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b610f07565b6001905092915050565b61080e610808610eff565b8261147c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190611c56565b905061093261090961044a565b610924670de0b6b3a7640000846113c290919063ffffffff16565b61143290919063ffffffff16565b91505090565b6000610977826040518060600160405280602481526020016126606024913961096886610963610eff565b610d02565b6113679092919063ffffffff16565b905061098b83610985610eff565b83610f07565b610995838361147c565b505050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b5050505050905090565b6000610aff610a49610eff565b84610afa856040518060600160405280602581526020016126846025913960016000610a73610eff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b610f07565b6001905092915050565b6000610b1d610b16610eff565b84846110d2565b6001905092915050565b60008111610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b619061234a565b60405180910390fd5b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad7a672f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd457600080fd5b505afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190611c56565b9050600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e553f6583336040518363ffffffff1660e01b8152600401610c6b929190612465565b600060405180830381600087803b158015610c8557600080fd5b505af1158015610c99573d6000803e3d6000fd5b50505050600080821415610cc457829050610cbd828461162a90919063ffffffff16565b9150610cf3565b610cf082610ce2610cd361044a565b866113c290919063ffffffff16565b61143290919063ffffffff16565b90505b610cfd338261167f565b505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000811480610e22575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610dd09291906121fb565b60206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611c56565b145b610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e589061240a565b60405180910390fd5b610ee28363095ea7b360e01b8484604051602401610e80929190612224565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611813565b505050565b6060610ef684846000856118da565b90509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e906123aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde906122aa565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110c5919061244a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611142576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111399061238a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a99061228a565b60405180910390fd5b6111bd8383836119fd565b61122881604051806060016040528060268152602001612612602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112bb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161135a919061244a565b60405180910390a3505050565b60008383111582906113af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a69190612268565b60405180910390fd5b5060008385039050809150509392505050565b6000808314156113d5576000905061142c565b60008284029050828482816113e657fe5b0414611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e9061232a565b60405180910390fd5b809150505b92915050565b600061147483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611a02565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e39061236a565b60405180910390fd5b6114f8826000836119fd565b611563816040518060600160405280602281526020016125f0602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113679092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600254611a6390919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161161e919061244a565b60405180910390a35050565b600080828401905083811015611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166c906122ca565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e69061242a565b60405180910390fd5b6116fb600083836119fd565b6117108160025461162a90919063ffffffff16565b600281905550611767816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611807919061244a565b60405180910390a35050565b6060611875826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ee79092919063ffffffff16565b90506000815111156118d557808060200190518101906118959190611c04565b6118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb906123ea565b60405180910390fd5b5b505050565b60606118e585611aad565b611924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191b906123ca565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff16858760405161194e91906121e4565b60006040518083038185875af1925050503d806000811461198b576040519150601f19603f3d011682016040523d82523d6000602084013e611990565b606091505b509150915081156119a55780925050506119f5565b6000815111156119b85780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ec9190612268565b60405180910390fd5b949350505050565b505050565b60008083118290611a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a409190612268565b60405180910390fd5b506000838581611a5557fe5b049050809150509392505050565b6000611aa583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611367565b905092915050565b600080823b905060008111915050919050565b600081359050611acf816125aa565b92915050565b600081519050611ae4816125c1565b92915050565b600081359050611af9816125d8565b92915050565b600081519050611b0e816125d8565b92915050565b600060208284031215611b2657600080fd5b6000611b3484828501611ac0565b91505092915050565b60008060408385031215611b5057600080fd5b6000611b5e85828601611ac0565b9250506020611b6f85828601611ac0565b9150509250929050565b600080600060608486031215611b8e57600080fd5b6000611b9c86828701611ac0565b9350506020611bad86828701611ac0565b9250506040611bbe86828701611aea565b9150509250925092565b60008060408385031215611bdb57600080fd5b6000611be985828601611ac0565b9250506020611bfa85828601611aea565b9150509250929050565b600060208284031215611c1657600080fd5b6000611c2484828501611ad5565b91505092915050565b600060208284031215611c3f57600080fd5b6000611c4d84828501611aea565b91505092915050565b600060208284031215611c6857600080fd5b6000611c7684828501611aff565b91505092915050565b611c8881612530565b82525050565b611c97816124db565b82525050565b611ca6816124ed565b82525050565b6000611cb7826124a9565b611cc181856124bf565b9350611cd1818560208601612566565b80840191505092915050565b6000611ce8826124b4565b611cf281856124ca565b9350611d02818560208601612566565b611d0b81612599565b840191505092915050565b6000611d236023836124ca565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d896022836124ca565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611def601b836124ca565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611e2f6014836124ca565b91507f496e73756666696369656e742062616c616e63650000000000000000000000006000830152602082019050919050565b6000611e6f601f836124ca565b91507f5769746864726177206d7573742062652067726561746572207468616e2030006000830152602082019050919050565b6000611eaf6021836124ca565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f15601e836124ca565b91507f4465706f736974206d7573742062652067726561746572207468616e203000006000830152602082019050919050565b6000611f556021836124ca565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fbb6025836124ca565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120216024836124ca565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612087601d836124ca565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006120c7602a836124ca565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b600061212d6036836124ca565b91507f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008301527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006020830152604082019050919050565b6000612193601f836124ca565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6121cf81612519565b82525050565b6121de81612523565b82525050565b60006121f08284611cac565b915081905092915050565b60006040820190506122106000830185611c8e565b61221d6020830184611c8e565b9392505050565b60006040820190506122396000830185611c8e565b61224660208301846121c6565b9392505050565b60006020820190506122626000830184611c9d565b92915050565b600060208201905081810360008301526122828184611cdd565b905092915050565b600060208201905081810360008301526122a381611d16565b9050919050565b600060208201905081810360008301526122c381611d7c565b9050919050565b600060208201905081810360008301526122e381611de2565b9050919050565b6000602082019050818103600083015261230381611e22565b9050919050565b6000602082019050818103600083015261232381611e62565b9050919050565b6000602082019050818103600083015261234381611ea2565b9050919050565b6000602082019050818103600083015261236381611f08565b9050919050565b6000602082019050818103600083015261238381611f48565b9050919050565b600060208201905081810360008301526123a381611fae565b9050919050565b600060208201905081810360008301526123c381612014565b9050919050565b600060208201905081810360008301526123e38161207a565b9050919050565b60006020820190508181036000830152612403816120ba565b9050919050565b6000602082019050818103600083015261242381612120565b9050919050565b6000602082019050818103600083015261244381612186565b9050919050565b600060208201905061245f60008301846121c6565b92915050565b600060408201905061247a60008301856121c6565b6124876020830184611c7f565b9392505050565b60006020820190506124a360008301846121d5565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006124e6826124f9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061253b82612542565b9050919050565b600061254d82612554565b9050919050565b600061255f826124f9565b9050919050565b60005b83811015612584578082015181840152602081019050612569565b83811115612593576000848401525b50505050565b6000601f19601f8301169050919050565b6125b3816124db565b81146125be57600080fd5b50565b6125ca816124ed565b81146125d557600080fd5b50565b6125e181612519565b81146125ec57600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b63058ec92e353e684493654e9c577a18859c3be19a3820de5b53a3bf7490afb64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "261:1556:5:-:0;;;479:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:141:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;604:8:5::1;592:9;;:20;;;;;;;;;;;;;;;;;;629:3;622:4;;:10;;;;;;;;;;;;;;;;;;642:49;667:9;;;;;;;;;;;687:2;642:4;;;;;;;;;;;:16;;;;;;;;:49;;;;;:::i;:::-;479:219:::0;;261:1556;;1340:613:38;1714:1;1705:5;:10;1704:62;;;;1764:1;1721:5;:15;;;1745:4;1752:7;1721:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1704:62;1696:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;1856:90;1876:5;1906:22;;;1930:7;1939:5;1883:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:19;;;:90;;:::i;:::-;1340:613;;;:::o;2959:751::-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;3404:27;;;;;;;;:69;;;;;:::i;:::-;3378:95;;3507:1;3487:10;:17;:21;3483:221;;;3627:10;3616:30;;;;;;;;;;;;:::i;:::-;3608:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3483:221;2959:751;;;:::o;3573:194:44:-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;;;:53;;:::i;:::-;3700:60;;3573:194;;;;;:::o;4920:958::-;5050:12;5082:18;5093:6;5082:10;;;:18;;:::i;:::-;5074:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5205:12;5219:23;5246:6;:11;;5266:8;5277:4;5246:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;5319:17;;;;;;5292:580;5457:1;5437:10;:17;:21;5433:429;;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5834:12;5827:20;;;;;;;;;;;:::i;:::-;;;;;;;;4920:958;;;;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;261:1556:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:128:-1:-;;86:6;80:13;71:22;;98:30;122:5;98:30;:::i;:::-;65:68;;;;:::o;140:164::-;;239:6;233:13;224:22;;251:48;293:5;251:48;:::i;:::-;218:86;;;;:::o;311:170::-;;413:6;407:13;398:22;;425:51;470:5;425:51;:::i;:::-;392:89;;;;:::o;488:134::-;;572:6;566:13;557:22;;584:33;611:5;584:33;:::i;:::-;551:71;;;;:::o;629:257::-;;741:2;729:9;720:7;716:23;712:32;709:2;;;757:1;754;747:12;709:2;792:1;809:61;862:7;853:6;842:9;838:22;809:61;:::i;:::-;799:71;;771:105;703:183;;;;:::o;893:465::-;;;1058:2;1046:9;1037:7;1033:23;1029:32;1026:2;;;1074:1;1071;1064:12;1026:2;1109:1;1126:79;1197:7;1188:6;1177:9;1173:22;1126:79;:::i;:::-;1116:89;;1088:123;1242:2;1260:82;1334:7;1325:6;1314:9;1310:22;1260:82;:::i;:::-;1250:92;;1221:127;1020:338;;;;;:::o;1365:263::-;;1480:2;1468:9;1459:7;1455:23;1451:32;1448:2;;;1496:1;1493;1486:12;1448:2;1531:1;1548:64;1604:7;1595:6;1584:9;1580:22;1548:64;:::i;:::-;1538:74;;1510:108;1442:186;;;;:::o;1635:113::-;1718:24;1736:5;1718:24;:::i;:::-;1713:3;1706:37;1700:48;;:::o;1755:356::-;;1883:38;1915:5;1883:38;:::i;:::-;1933:88;2014:6;2009:3;1933:88;:::i;:::-;1926:95;;2026:52;2071:6;2066:3;2059:4;2052:5;2048:16;2026:52;:::i;:::-;2099:6;2094:3;2090:16;2083:23;;1863:248;;;;;:::o;2118:347::-;;2230:39;2263:5;2230:39;:::i;:::-;2281:71;2345:6;2340:3;2281:71;:::i;:::-;2274:78;;2357:52;2402:6;2397:3;2390:4;2383:5;2379:16;2357:52;:::i;:::-;2430:29;2452:6;2430:29;:::i;:::-;2425:3;2421:39;2414:46;;2210:255;;;;;:::o;2473:329::-;;2633:67;2697:2;2692:3;2633:67;:::i;:::-;2626:74;;2733:31;2729:1;2724:3;2720:11;2713:52;2793:2;2788:3;2784:12;2777:19;;2619:183;;;:::o;2811:379::-;;2971:67;3035:2;3030:3;2971:67;:::i;:::-;2964:74;;3071:34;3067:1;3062:3;3058:11;3051:55;3140:12;3135:2;3130:3;3126:12;3119:34;3181:2;3176:3;3172:12;3165:19;;2957:233;;;:::o;3199:391::-;;3359:67;3423:2;3418:3;3359:67;:::i;:::-;3352:74;;3459:34;3455:1;3450:3;3446:11;3439:55;3528:24;3523:2;3518:3;3514:12;3507:46;3581:2;3576:3;3572:12;3565:19;;3345:245;;;:::o;3598:113::-;3681:24;3699:5;3681:24;:::i;:::-;3676:3;3669:37;3663:48;;:::o;3718:271::-;;3871:93;3960:3;3951:6;3871:93;:::i;:::-;3864:100;;3981:3;3974:10;;3852:137;;;;:::o;3996:333::-;;4151:2;4140:9;4136:18;4128:26;;4165:71;4233:1;4222:9;4218:17;4209:6;4165:71;:::i;:::-;4247:72;4315:2;4304:9;4300:18;4291:6;4247:72;:::i;:::-;4122:207;;;;;:::o;4336:333::-;;4491:2;4480:9;4476:18;4468:26;;4505:71;4573:1;4562:9;4558:17;4549:6;4505:71;:::i;:::-;4587:72;4655:2;4644:9;4640:18;4631:6;4587:72;:::i;:::-;4462:207;;;;;:::o;4676:310::-;;4823:2;4812:9;4808:18;4800:26;;4873:9;4867:4;4863:20;4859:1;4848:9;4844:17;4837:47;4898:78;4971:4;4962:6;4898:78;:::i;:::-;4890:86;;4794:192;;;;:::o;4993:416::-;;5193:2;5182:9;5178:18;5170:26;;5243:9;5237:4;5233:20;5229:1;5218:9;5214:17;5207:47;5268:131;5394:4;5268:131;:::i;:::-;5260:139;;5164:245;;;:::o;5416:416::-;;5616:2;5605:9;5601:18;5593:26;;5666:9;5660:4;5656:20;5652:1;5641:9;5637:17;5630:47;5691:131;5817:4;5691:131;:::i;:::-;5683:139;;5587:245;;;:::o;5839:416::-;;6039:2;6028:9;6024:18;6016:26;;6089:9;6083:4;6079:20;6075:1;6064:9;6060:17;6053:47;6114:131;6240:4;6114:131;:::i;:::-;6106:139;;6010:245;;;:::o;6262:121::-;;6355:5;6349:12;6339:22;;6320:63;;;:::o;6390:122::-;;6484:5;6478:12;6468:22;;6449:63;;;:::o;6520:144::-;;6655:3;6640:18;;6633:31;;;;:::o;6673:163::-;;6788:6;6783:3;6776:19;6825:4;6820:3;6816:14;6801:29;;6769:67;;;;:::o;6844:91::-;;6906:24;6924:5;6906:24;:::i;:::-;6895:35;;6889:46;;;:::o;6942:85::-;;7015:5;7008:13;7001:21;6990:32;;6984:43;;;:::o;7034:106::-;;7111:24;7129:5;7111:24;:::i;:::-;7100:35;;7094:46;;;:::o;7147:109::-;;7227:24;7245:5;7227:24;:::i;:::-;7216:35;;7210:46;;;:::o;7263:121::-;;7336:42;7329:5;7325:54;7314:65;;7308:76;;;:::o;7391:72::-;;7453:5;7442:16;;7436:27;;;:::o;7471:268::-;7536:1;7543:101;7557:6;7554:1;7551:13;7543:101;;;7633:1;7628:3;7624:11;7618:18;7614:1;7609:3;7605:11;7598:39;7579:2;7576:1;7572:10;7567:15;;7543:101;;;7659:6;7656:1;7653:13;7650:2;;;7724:1;7715:6;7710:3;7706:16;7699:27;7650:2;7520:219;;;;:::o;7747:97::-;;7835:2;7831:7;7826:2;7819:5;7815:14;7811:28;7801:38;;7795:49;;;:::o;7852:111::-;7918:21;7933:5;7918:21;:::i;:::-;7911:5;7908:32;7898:2;;7954:1;7951;7944:12;7898:2;7892:71;:::o;7970:147::-;8054:39;8087:5;8054:39;:::i;:::-;8047:5;8044:50;8034:2;;8108:1;8105;8098:12;8034:2;8028:89;:::o;8124:153::-;8211:42;8247:5;8211:42;:::i;:::-;8204:5;8201:53;8191:2;;8268:1;8265;8258:12;8191:2;8185:92;:::o;8284:117::-;8353:24;8371:5;8353:24;:::i;:::-;8346:5;8343:35;8333:2;;8392:1;8389;8382:12;8333:2;8327:74;:::o;261:1556:5:-;;;;;;;",
  "deployedSourceMap": "261:1556:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;453:19:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3262:98:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:473:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3121:81:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:89:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3418:117:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1645:170:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:290:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2413:85:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6295:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3738:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:456:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3968:149:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2219:81;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;453:19:5:-;;;;:::o;3262:98:35:-;3315:7;3341:12;;3334:19;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;1166:473:5:-;1236:1;1227:6;:10;1219:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:16;1303:21;1313:10;1303:9;:21::i;:::-;1284:40;;1352:8;1342:6;:18;;1334:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1396:13;1412:9;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1396:40;;1446:14;1463:38;1487:13;:11;:13::i;:::-;1464:17;1474:6;1464:5;:9;;:17;;;;:::i;:::-;1463:23;;:38;;;;:::i;:::-;1446:55;;1511:25;1517:10;1529:6;1511:5;:25::i;:::-;1596:9;;;;;;;;;;;:16;;;1613:6;1621:10;1596:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:473;;;;:::o;3121:81:35:-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;481:89:36:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;:::-;481:89;:::o;3418:117:35:-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;1645:170:5:-;1698:7;1717:13;1733:9;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:40;;1774:34;1794:13;:11;:13::i;:::-;1774:15;1784:4;1774:5;:9;;:15;;;;:::i;:::-;:19;;:34;;;;:::i;:::-;1767:41;;;1645:170;:::o;876:290:36:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2413:85:35:-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;6295:266::-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;704:456:5:-;773:1;764:6;:10;756:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;819:13;835:9;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;819:40;;870:9;;;;;;;;;;;:17;;;888:6;896:10;870:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:14;959:1;950:5;:10;946:173;;;985:6;976:15;;1013:17;1024:5;1013:6;:10;;:17;;;;:::i;:::-;1005:25;;946:173;;;1070:38;1102:5;1071:25;1082:13;:11;:13::i;:::-;1071:6;:10;;:25;;;;:::i;:::-;1070:31;;:38;;;;:::i;:::-;1061:47;;946:173;1128:25;1134:10;1146:6;1128:5;:25::i;:::-;704:456;;;:::o;3968:149:35:-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;1340:613:38:-;1714:1;1705:5;:10;1704:62;;;;1764:1;1721:5;:15;;;1745:4;1752:7;1721:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1704:62;1696:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;1856:90;1876:5;1906:22;;;1930:7;1939:5;1883:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:19;:90::i;:::-;1340:613;;;:::o;3573:194:44:-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;;3573:194;;;;;:::o;590:104:29:-;643:15;677:10;670:17;;590:104;:::o;9357:340:35:-;9475:1;9458:19;;:5;:19;;;;9450:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9555:1;9536:21;;:7;:21;;;;9528:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9637:6;9607:11;:18;9619:5;9607:18;;;;;;;;;;;;;;;:27;9626:7;9607:27;;;;;;;;;;;;;;;:36;;;;9674:7;9658:32;;9667:5;9658:32;;;9683:6;9658:32;;;;;;:::i;:::-;;;;;;;;9357:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;:::i;:::-;;;;;;;;7035:530;;;:::o;1746:187:34:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;2180:459::-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;8524:410:35:-;8626:1;8607:21;;:7;:21;;;;8599:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;:9;:18;8768:7;8758:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8737:9;:18;8747:7;8737:18;;;;;;;;;;;;;;;:89;;;;8851:24;8868:6;8851:12;;:16;;:24;;;;:::i;:::-;8836:12;:39;;;;8916:1;8890:37;;8899:7;8890:37;;;8920:6;8890:37;;;;;;:::i;:::-;;;;;;;;8524:410;;:::o;874:176:34:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7835:370:35:-;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;:::i;:::-;;;;;;;;7835:370;;:::o;2959:751:38:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;3404:27;;;;:69;;;;;:::i;:::-;3378:95;;3507:1;3487:10;:17;:21;3483:221;;;3627:10;3616:30;;;;;;;;;;;;:::i;:::-;3608:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3483:221;2959:751;;;:::o;4920:958:44:-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5205:12;5219:23;5246:6;:11;;5266:8;5277:4;5246:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;5319:17;;;;;;5292:580;5457:1;5437:10;:17;:21;5433:429;;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5834:12;5827:20;;;;;;;;;;;:::i;:::-;;;;;;;;4920:958;;;;;;;:::o;10695:92:35:-;;;;:::o;3713:272:34:-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;718:413:44:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;277:130::-;;357:6;344:20;335:29;;369:33;396:5;369:33;:::i;:::-;329:78;;;;:::o;414:134::-;;498:6;492:13;483:22;;510:33;537:5;510:33;:::i;:::-;477:71;;;;:::o;555:241::-;;659:2;647:9;638:7;634:23;630:32;627:2;;;675:1;672;665:12;627:2;710:1;727:53;772:7;763:6;752:9;748:22;727:53;:::i;:::-;717:63;;689:97;621:175;;;;:::o;803:366::-;;;924:2;912:9;903:7;899:23;895:32;892:2;;;940:1;937;930:12;892:2;975:1;992:53;1037:7;1028:6;1017:9;1013:22;992:53;:::i;:::-;982:63;;954:97;1082:2;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1061:98;886:283;;;;;:::o;1176:491::-;;;;1314:2;1302:9;1293:7;1289:23;1285:32;1282:2;;;1330:1;1327;1320:12;1282:2;1365:1;1382:53;1427:7;1418:6;1407:9;1403:22;1382:53;:::i;:::-;1372:63;;1344:97;1472:2;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1451:98;1580:2;1598:53;1643:7;1634:6;1623:9;1619:22;1598:53;:::i;:::-;1588:63;;1559:98;1276:391;;;;;:::o;1674:366::-;;;1795:2;1783:9;1774:7;1770:23;1766:32;1763:2;;;1811:1;1808;1801:12;1763:2;1846:1;1863:53;1908:7;1899:6;1888:9;1884:22;1863:53;:::i;:::-;1853:63;;1825:97;1953:2;1971:53;2016:7;2007:6;1996:9;1992:22;1971:53;:::i;:::-;1961:63;;1932:98;1757:283;;;;;:::o;2047:257::-;;2159:2;2147:9;2138:7;2134:23;2130:32;2127:2;;;2175:1;2172;2165:12;2127:2;2210:1;2227:61;2280:7;2271:6;2260:9;2256:22;2227:61;:::i;:::-;2217:71;;2189:105;2121:183;;;;:::o;2311:241::-;;2415:2;2403:9;2394:7;2390:23;2386:32;2383:2;;;2431:1;2428;2421:12;2383:2;2466:1;2483:53;2528:7;2519:6;2508:9;2504:22;2483:53;:::i;:::-;2473:63;;2445:97;2377:175;;;;:::o;2559:263::-;;2674:2;2662:9;2653:7;2649:23;2645:32;2642:2;;;2690:1;2687;2680:12;2642:2;2725:1;2742:64;2798:7;2789:6;2778:9;2774:22;2742:64;:::i;:::-;2732:74;;2704:108;2636:186;;;;:::o;2829:142::-;2920:45;2959:5;2920:45;:::i;:::-;2915:3;2908:58;2902:69;;:::o;2978:113::-;3061:24;3079:5;3061:24;:::i;:::-;3056:3;3049:37;3043:48;;:::o;3098:104::-;3175:21;3190:5;3175:21;:::i;:::-;3170:3;3163:34;3157:45;;:::o;3209:356::-;;3337:38;3369:5;3337:38;:::i;:::-;3387:88;3468:6;3463:3;3387:88;:::i;:::-;3380:95;;3480:52;3525:6;3520:3;3513:4;3506:5;3502:16;3480:52;:::i;:::-;3553:6;3548:3;3544:16;3537:23;;3317:248;;;;;:::o;3572:347::-;;3684:39;3717:5;3684:39;:::i;:::-;3735:71;3799:6;3794:3;3735:71;:::i;:::-;3728:78;;3811:52;3856:6;3851:3;3844:4;3837:5;3833:16;3811:52;:::i;:::-;3884:29;3906:6;3884:29;:::i;:::-;3879:3;3875:39;3868:46;;3664:255;;;;;:::o;3927:372::-;;4087:67;4151:2;4146:3;4087:67;:::i;:::-;4080:74;;4187:34;4183:1;4178:3;4174:11;4167:55;4256:5;4251:2;4246:3;4242:12;4235:27;4290:2;4285:3;4281:12;4274:19;;4073:226;;;:::o;4308:371::-;;4468:67;4532:2;4527:3;4468:67;:::i;:::-;4461:74;;4568:34;4564:1;4559:3;4555:11;4548:55;4637:4;4632:2;4627:3;4623:12;4616:26;4670:2;4665:3;4661:12;4654:19;;4454:225;;;:::o;4688:327::-;;4848:67;4912:2;4907:3;4848:67;:::i;:::-;4841:74;;4948:29;4944:1;4939:3;4935:11;4928:50;5006:2;5001:3;4997:12;4990:19;;4834:181;;;:::o;5024:320::-;;5184:67;5248:2;5243:3;5184:67;:::i;:::-;5177:74;;5284:22;5280:1;5275:3;5271:11;5264:43;5335:2;5330:3;5326:12;5319:19;;5170:174;;;:::o;5353:331::-;;5513:67;5577:2;5572:3;5513:67;:::i;:::-;5506:74;;5613:33;5609:1;5604:3;5600:11;5593:54;5675:2;5670:3;5666:12;5659:19;;5499:185;;;:::o;5693:370::-;;5853:67;5917:2;5912:3;5853:67;:::i;:::-;5846:74;;5953:34;5949:1;5944:3;5940:11;5933:55;6022:3;6017:2;6012:3;6008:12;6001:25;6054:2;6049:3;6045:12;6038:19;;5839:224;;;:::o;6072:330::-;;6232:67;6296:2;6291:3;6232:67;:::i;:::-;6225:74;;6332:32;6328:1;6323:3;6319:11;6312:53;6393:2;6388:3;6384:12;6377:19;;6218:184;;;:::o;6411:370::-;;6571:67;6635:2;6630:3;6571:67;:::i;:::-;6564:74;;6671:34;6667:1;6662:3;6658:11;6651:55;6740:3;6735:2;6730:3;6726:12;6719:25;6772:2;6767:3;6763:12;6756:19;;6557:224;;;:::o;6790:374::-;;6950:67;7014:2;7009:3;6950:67;:::i;:::-;6943:74;;7050:34;7046:1;7041:3;7037:11;7030:55;7119:7;7114:2;7109:3;7105:12;7098:29;7155:2;7150:3;7146:12;7139:19;;6936:228;;;:::o;7173:373::-;;7333:67;7397:2;7392:3;7333:67;:::i;:::-;7326:74;;7433:34;7429:1;7424:3;7420:11;7413:55;7502:6;7497:2;7492:3;7488:12;7481:28;7537:2;7532:3;7528:12;7521:19;;7319:227;;;:::o;7555:329::-;;7715:67;7779:2;7774:3;7715:67;:::i;:::-;7708:74;;7815:31;7811:1;7806:3;7802:11;7795:52;7875:2;7870:3;7866:12;7859:19;;7701:183;;;:::o;7893:379::-;;8053:67;8117:2;8112:3;8053:67;:::i;:::-;8046:74;;8153:34;8149:1;8144:3;8140:11;8133:55;8222:12;8217:2;8212:3;8208:12;8201:34;8263:2;8258:3;8254:12;8247:19;;8039:233;;;:::o;8281:391::-;;8441:67;8505:2;8500:3;8441:67;:::i;:::-;8434:74;;8541:34;8537:1;8532:3;8528:11;8521:55;8610:24;8605:2;8600:3;8596:12;8589:46;8663:2;8658:3;8654:12;8647:19;;8427:245;;;:::o;8681:331::-;;8841:67;8905:2;8900:3;8841:67;:::i;:::-;8834:74;;8941:33;8937:1;8932:3;8928:11;8921:54;9003:2;8998:3;8994:12;8987:19;;8827:185;;;:::o;9020:113::-;9103:24;9121:5;9103:24;:::i;:::-;9098:3;9091:37;9085:48;;:::o;9140:107::-;9219:22;9235:5;9219:22;:::i;:::-;9214:3;9207:35;9201:46;;:::o;9254:271::-;;9407:93;9496:3;9487:6;9407:93;:::i;:::-;9400:100;;9517:3;9510:10;;9388:137;;;;:::o;9532:333::-;;9687:2;9676:9;9672:18;9664:26;;9701:71;9769:1;9758:9;9754:17;9745:6;9701:71;:::i;:::-;9783:72;9851:2;9840:9;9836:18;9827:6;9783:72;:::i;:::-;9658:207;;;;;:::o;9872:333::-;;10027:2;10016:9;10012:18;10004:26;;10041:71;10109:1;10098:9;10094:17;10085:6;10041:71;:::i;:::-;10123:72;10191:2;10180:9;10176:18;10167:6;10123:72;:::i;:::-;9998:207;;;;;:::o;10212:210::-;;10333:2;10322:9;10318:18;10310:26;;10347:65;10409:1;10398:9;10394:17;10385:6;10347:65;:::i;:::-;10304:118;;;;:::o;10429:310::-;;10576:2;10565:9;10561:18;10553:26;;10626:9;10620:4;10616:20;10612:1;10601:9;10597:17;10590:47;10651:78;10724:4;10715:6;10651:78;:::i;:::-;10643:86;;10547:192;;;;:::o;10746:416::-;;10946:2;10935:9;10931:18;10923:26;;10996:9;10990:4;10986:20;10982:1;10971:9;10967:17;10960:47;11021:131;11147:4;11021:131;:::i;:::-;11013:139;;10917:245;;;:::o;11169:416::-;;11369:2;11358:9;11354:18;11346:26;;11419:9;11413:4;11409:20;11405:1;11394:9;11390:17;11383:47;11444:131;11570:4;11444:131;:::i;:::-;11436:139;;11340:245;;;:::o;11592:416::-;;11792:2;11781:9;11777:18;11769:26;;11842:9;11836:4;11832:20;11828:1;11817:9;11813:17;11806:47;11867:131;11993:4;11867:131;:::i;:::-;11859:139;;11763:245;;;:::o;12015:416::-;;12215:2;12204:9;12200:18;12192:26;;12265:9;12259:4;12255:20;12251:1;12240:9;12236:17;12229:47;12290:131;12416:4;12290:131;:::i;:::-;12282:139;;12186:245;;;:::o;12438:416::-;;12638:2;12627:9;12623:18;12615:26;;12688:9;12682:4;12678:20;12674:1;12663:9;12659:17;12652:47;12713:131;12839:4;12713:131;:::i;:::-;12705:139;;12609:245;;;:::o;12861:416::-;;13061:2;13050:9;13046:18;13038:26;;13111:9;13105:4;13101:20;13097:1;13086:9;13082:17;13075:47;13136:131;13262:4;13136:131;:::i;:::-;13128:139;;13032:245;;;:::o;13284:416::-;;13484:2;13473:9;13469:18;13461:26;;13534:9;13528:4;13524:20;13520:1;13509:9;13505:17;13498:47;13559:131;13685:4;13559:131;:::i;:::-;13551:139;;13455:245;;;:::o;13707:416::-;;13907:2;13896:9;13892:18;13884:26;;13957:9;13951:4;13947:20;13943:1;13932:9;13928:17;13921:47;13982:131;14108:4;13982:131;:::i;:::-;13974:139;;13878:245;;;:::o;14130:416::-;;14330:2;14319:9;14315:18;14307:26;;14380:9;14374:4;14370:20;14366:1;14355:9;14351:17;14344:47;14405:131;14531:4;14405:131;:::i;:::-;14397:139;;14301:245;;;:::o;14553:416::-;;14753:2;14742:9;14738:18;14730:26;;14803:9;14797:4;14793:20;14789:1;14778:9;14774:17;14767:47;14828:131;14954:4;14828:131;:::i;:::-;14820:139;;14724:245;;;:::o;14976:416::-;;15176:2;15165:9;15161:18;15153:26;;15226:9;15220:4;15216:20;15212:1;15201:9;15197:17;15190:47;15251:131;15377:4;15251:131;:::i;:::-;15243:139;;15147:245;;;:::o;15399:416::-;;15599:2;15588:9;15584:18;15576:26;;15649:9;15643:4;15639:20;15635:1;15624:9;15620:17;15613:47;15674:131;15800:4;15674:131;:::i;:::-;15666:139;;15570:245;;;:::o;15822:416::-;;16022:2;16011:9;16007:18;15999:26;;16072:9;16066:4;16062:20;16058:1;16047:9;16043:17;16036:47;16097:131;16223:4;16097:131;:::i;:::-;16089:139;;15993:245;;;:::o;16245:416::-;;16445:2;16434:9;16430:18;16422:26;;16495:9;16489:4;16485:20;16481:1;16470:9;16466:17;16459:47;16520:131;16646:4;16520:131;:::i;:::-;16512:139;;16416:245;;;:::o;16668:222::-;;16795:2;16784:9;16780:18;16772:26;;16809:71;16877:1;16866:9;16862:17;16853:6;16809:71;:::i;:::-;16766:124;;;;:::o;16897:349::-;;17060:2;17049:9;17045:18;17037:26;;17074:71;17142:1;17131:9;17127:17;17118:6;17074:71;:::i;:::-;17156:80;17232:2;17221:9;17217:18;17208:6;17156:80;:::i;:::-;17031:215;;;;;:::o;17253:214::-;;17376:2;17365:9;17361:18;17353:26;;17390:67;17454:1;17443:9;17439:17;17430:6;17390:67;:::i;:::-;17347:120;;;;:::o;17474:121::-;;17567:5;17561:12;17551:22;;17532:63;;;:::o;17602:122::-;;17696:5;17690:12;17680:22;;17661:63;;;:::o;17732:144::-;;17867:3;17852:18;;17845:31;;;;:::o;17885:163::-;;18000:6;17995:3;17988:19;18037:4;18032:3;18028:14;18013:29;;17981:67;;;;:::o;18056:91::-;;18118:24;18136:5;18118:24;:::i;:::-;18107:35;;18101:46;;;:::o;18154:85::-;;18227:5;18220:13;18213:21;18202:32;;18196:43;;;:::o;18246:121::-;;18319:42;18312:5;18308:54;18297:65;;18291:76;;;:::o;18374:72::-;;18436:5;18425:16;;18419:27;;;:::o;18453:81::-;;18524:4;18517:5;18513:16;18502:27;;18496:38;;;:::o;18541:129::-;;18628:37;18659:5;18628:37;:::i;:::-;18615:50;;18609:61;;;:::o;18677:121::-;;18756:37;18787:5;18756:37;:::i;:::-;18743:50;;18737:61;;;:::o;18805:108::-;;18884:24;18902:5;18884:24;:::i;:::-;18871:37;;18865:48;;;:::o;18921:268::-;18986:1;18993:101;19007:6;19004:1;19001:13;18993:101;;;19083:1;19078:3;19074:11;19068:18;19064:1;19059:3;19055:11;19048:39;19029:2;19026:1;19022:10;19017:15;;18993:101;;;19109:6;19106:1;19103:13;19100:2;;;19174:1;19165:6;19160:3;19156:16;19149:27;19100:2;18970:219;;;;:::o;19197:97::-;;19285:2;19281:7;19276:2;19269:5;19265:14;19261:28;19251:38;;19245:49;;;:::o;19302:117::-;19371:24;19389:5;19371:24;:::i;:::-;19364:5;19361:35;19351:2;;19410:1;19407;19400:12;19351:2;19345:74;:::o;19426:111::-;19492:21;19507:5;19492:21;:::i;:::-;19485:5;19482:32;19472:2;;19528:1;19525;19518:12;19472:2;19466:71;:::o;19544:117::-;19613:24;19631:5;19613:24;:::i;:::-;19606:5;19603:35;19593:2;;19652:1;19649;19642:12;19593:2;19587:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./interfaces/ITreasury.sol\";\n\ncontract RDAI is ERC20Burnable {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    ITreasury private _treasury;\n    IERC20 private _dai;\n\n    uint256 public pool;\n\n    constructor(IERC20 dai, ITreasury treasury)\n        public\n        ERC20(\"Real Hedge DAI\", \"rDAI\")\n    {\n        _treasury = treasury;\n        _dai = dai;\n        _dai.safeApprove(address(_treasury), uint256(-1));\n    }\n\n    function deposit(uint256 amount) external {\n        require(amount > 0, \"Deposit must be greater than 0\");\n        uint256 value = _treasury.totalBalance();\n\n        _treasury.deposit(amount, msg.sender);\n\n        uint256 shares = 0;\n        if (value == 0) {\n            shares = amount;\n            value = amount.add(value);\n        } else {\n            shares = (amount.mul(totalSupply())).div(value);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    function withdraw(uint256 shares) external {\n        require(shares > 0, \"Withdraw must be greater than 0\");\n\n        uint256 ibalance = balanceOf(msg.sender);\n        require(shares <= ibalance, \"Insufficient balance\");\n\n        uint256 value = _treasury.totalBalance();\n        uint256 amount = (value.mul(shares)).div(totalSupply());\n        _burn(msg.sender, shares);\n\n        // This reverts if capital not available\n        _treasury.payout(amount, msg.sender);\n    }\n\n    function getPricePerFullShare() public view returns (uint256) {\n        uint256 value = _treasury.totalBalance();\n        return value.mul(1e18).div(totalSupply());\n    }\n}\n",
  "sourcePath": "/RDAI.sol",
  "ast": {
    "absolutePath": "/RDAI.sol",
    "exportedSymbols": {
      "RDAI": [
        1500
      ]
    },
    "id": 1501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1298,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:5"
      },
      {
        "id": 1299,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 1300,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 5561,
        "src": "99:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 1301,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 5852,
        "src": "163:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/ITreasury.sol",
        "file": "./interfaces/ITreasury.sol",
        "id": 1302,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 2326,
        "src": "223:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1303,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5560,
              "src": "278:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$5560",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 1304,
            "nodeType": "InheritanceSpecifier",
            "src": "278:13:5"
          }
        ],
        "contractDependencies": [
          4340,
          5504,
          5560,
          5638
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1500,
        "linearizedBaseContracts": [
          1500,
          5560,
          5504,
          5638,
          4340
        ],
        "name": "RDAI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1307,
            "libraryName": {
              "contractScope": null,
              "id": 1305,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5851,
              "src": "304:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5851",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "298:27:5",
            "typeName": {
              "contractScope": null,
              "id": 1306,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5638,
              "src": "318:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5638",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1310,
            "libraryName": {
              "contractScope": null,
              "id": 1308,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7169,
              "src": "336:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$7169",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "330:26:5",
            "typeName": {
              "id": 1309,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1313,
            "libraryName": {
              "contractScope": null,
              "id": 1311,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4997,
              "src": "367:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4997",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "361:27:5",
            "typeName": {
              "id": 1312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1315,
            "mutability": "mutable",
            "name": "_treasury",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "394:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITreasury_$2325",
              "typeString": "contract ITreasury"
            },
            "typeName": {
              "contractScope": null,
              "id": 1314,
              "name": "ITreasury",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2325,
              "src": "394:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITreasury_$2325",
                "typeString": "contract ITreasury"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1317,
            "mutability": "mutable",
            "name": "_dai",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "427:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5638",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1316,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5638,
              "src": "427:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5638",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 1319,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "453:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1318,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "582:116:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "592:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "604:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "src": "592:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "592:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1334,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "622:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5638",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1335,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "629:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5638",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "622:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5638",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "622:10:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "_treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "667:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITreasury_$2325",
                              "typeString": "contract ITreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITreasury_$2325",
                              "typeString": "contract ITreasury"
                            }
                          ],
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "659:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "659:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "659:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "687:2:5",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "688:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "679:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1345,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "679:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "679:11:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1338,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "642:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5638",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5740,
                      "src": "642:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5638_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5638_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "642:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "642:49:5"
                }
              ]
            },
            "documentation": null,
            "id": 1353,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5265616c20486564676520444149",
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "552:16:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1802adf4415dcebf4866b75185ea31b47258bfaad26e605d987b9a4093ec7337",
                      "typeString": "literal_string \"Real Hedge DAI\""
                    },
                    "value": "Real Hedge DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "72444149",
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "570:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_09f0a07dca5370f1547f123214bd5ee760def56eae05f2c89ab132683b7e1ebd",
                      "typeString": "literal_string \"rDAI\""
                    },
                    "value": "rDAI"
                  }
                ],
                "id": 1328,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1325,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5504,
                  "src": "546:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$5504_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "546:31:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1353,
                  "src": "491:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5638",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1320,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5638,
                    "src": "491:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5638",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1353,
                  "src": "503:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITreasury_$2325",
                    "typeString": "contract ITreasury"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1322,
                    "name": "ITreasury",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2325,
                    "src": "503:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:32:5"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:5"
            },
            "scope": 1500,
            "src": "479:219:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "746:414:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "764:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "773:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "764:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f736974206d7573742062652067726561746572207468616e2030",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1dfecb3fad5bb2f2ca889220182a9615a266b067f8af9c425f7eb8e6c61aaa0",
                          "typeString": "literal_string \"Deposit must be greater than 0\""
                        },
                        "value": "Deposit must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1dfecb3fad5bb2f2ca889220182a9615a266b067f8af9c425f7eb8e6c61aaa0",
                          "typeString": "literal_string \"Deposit must be greater than 0\""
                        }
                      ],
                      "id": 1358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "756:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "756:53:5"
                },
                {
                  "assignments": [
                    1366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1418,
                      "src": "819:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "835:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "835:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1374,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "888:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "896:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "896:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "870:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2314,
                      "src": "870:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "870:37:5"
                },
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1418,
                      "src": "918:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "918:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "935:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "918:18:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1383,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "950:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "950:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1410,
                    "nodeType": "Block",
                    "src": "1047:72:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1398,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "1061:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1406,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "1102:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1401,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5090,
                                          "src": "1082:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 1402,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1082:13:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1399,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "1071:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1400,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4910,
                                      "src": "1071:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1071:25:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1404,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1070:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4927,
                              "src": "1070:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1070:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1061:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1409,
                        "nodeType": "ExpressionStatement",
                        "src": "1061:47:5"
                      }
                    ]
                  },
                  "id": 1411,
                  "nodeType": "IfStatement",
                  "src": "946:173:5",
                  "trueBody": {
                    "id": 1397,
                    "nodeType": "Block",
                    "src": "962:79:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1386,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "976:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1387,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "985:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "976:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "976:15:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1390,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "1005:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1393,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "1024:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1391,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1355,
                                "src": "1013:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4830,
                              "src": "1013:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1013:17:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1005:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "1005:25:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1134:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1134:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1415,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "1146:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1412,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5380,
                      "src": "1128:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:25:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1419,
                  "src": "721:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:16:5"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:0:5"
            },
            "scope": 1500,
            "src": "704:456:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1209:430:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1425,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "1227:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1236:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1227:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177206d7573742062652067726561746572207468616e2030",
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61d113a3025f4bf0a14af51b238c81732cc4ced5abfcee2b635f6dd7984128b0",
                          "typeString": "literal_string \"Withdraw must be greater than 0\""
                        },
                        "value": "Withdraw must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61d113a3025f4bf0a14af51b238c81732cc4ced5abfcee2b635f6dd7984128b0",
                          "typeString": "literal_string \"Withdraw must be greater than 0\""
                        }
                      ],
                      "id": 1424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1219:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:54:5"
                },
                {
                  "assignments": [
                    1432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "ibalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1284:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1437,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1313:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1313:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1433,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5104,
                      "src": "1303:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1439,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "1342:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1440,
                          "name": "ibalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1432,
                          "src": "1352:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1342:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1362:22:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1334:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "1334:51:5"
                },
                {
                  "assignments": [
                    1446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1446,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1396:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1396:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1450,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1447,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1412:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "1412:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1396:40:5"
                },
                {
                  "assignments": [
                    1452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1452,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1446:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1446:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1462,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1459,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5090,
                          "src": "1487:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1455,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1421,
                                "src": "1474:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1453,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1446,
                                "src": "1464:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4910,
                              "src": "1464:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1464:17:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1457,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1463:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4927,
                      "src": "1463:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1517:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1517:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "1529:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1463,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5436,
                      "src": "1511:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1468,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1472,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "1613:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1621:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1621:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1596:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "payout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2300,
                      "src": "1596:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:36:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1478,
                  "src": "1184:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:16:5"
            },
            "returnParameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:0:5"
            },
            "scope": 1500,
            "src": "1166:473:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "1707:108:5",
              "statements": [
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1498,
                      "src": "1717:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1488,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1485,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1733:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "1733:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1733:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1494,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5090,
                          "src": "1794:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1794:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1784:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1489,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "1774:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4910,
                          "src": "1774:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1774:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4927,
                      "src": "1774:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1497,
                  "nodeType": "Return",
                  "src": "1767:41:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77c7b8fc",
            "id": 1499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:2:5"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "1698:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:9:5"
            },
            "scope": 1500,
            "src": "1645:170:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1501,
        "src": "261:1556:5"
      }
    ],
    "src": "32:1786:5"
  },
  "legacyAST": {
    "absolutePath": "/RDAI.sol",
    "exportedSymbols": {
      "RDAI": [
        1500
      ]
    },
    "id": 1501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1298,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:5"
      },
      {
        "id": 1299,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 1300,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 5561,
        "src": "99:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 1301,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 5852,
        "src": "163:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/interfaces/ITreasury.sol",
        "file": "./interfaces/ITreasury.sol",
        "id": 1302,
        "nodeType": "ImportDirective",
        "scope": 1501,
        "sourceUnit": 2326,
        "src": "223:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1303,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5560,
              "src": "278:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$5560",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 1304,
            "nodeType": "InheritanceSpecifier",
            "src": "278:13:5"
          }
        ],
        "contractDependencies": [
          4340,
          5504,
          5560,
          5638
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1500,
        "linearizedBaseContracts": [
          1500,
          5560,
          5504,
          5638,
          4340
        ],
        "name": "RDAI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1307,
            "libraryName": {
              "contractScope": null,
              "id": 1305,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5851,
              "src": "304:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5851",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "298:27:5",
            "typeName": {
              "contractScope": null,
              "id": 1306,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5638,
              "src": "318:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5638",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1310,
            "libraryName": {
              "contractScope": null,
              "id": 1308,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7169,
              "src": "336:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$7169",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "330:26:5",
            "typeName": {
              "id": 1309,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1313,
            "libraryName": {
              "contractScope": null,
              "id": 1311,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4997,
              "src": "367:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4997",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "361:27:5",
            "typeName": {
              "id": 1312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1315,
            "mutability": "mutable",
            "name": "_treasury",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "394:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITreasury_$2325",
              "typeString": "contract ITreasury"
            },
            "typeName": {
              "contractScope": null,
              "id": 1314,
              "name": "ITreasury",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2325,
              "src": "394:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITreasury_$2325",
                "typeString": "contract ITreasury"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1317,
            "mutability": "mutable",
            "name": "_dai",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "427:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5638",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1316,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5638,
              "src": "427:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5638",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 1319,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1500,
            "src": "453:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1318,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "582:116:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "592:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "604:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreasury_$2325",
                        "typeString": "contract ITreasury"
                      }
                    },
                    "src": "592:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "592:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1334,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "622:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5638",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1335,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "629:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5638",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "622:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5638",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "622:10:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "_treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "667:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITreasury_$2325",
                              "typeString": "contract ITreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITreasury_$2325",
                              "typeString": "contract ITreasury"
                            }
                          ],
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "659:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "659:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "659:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "687:2:5",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "688:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "679:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1345,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "679:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "679:11:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1338,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "642:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5638",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5740,
                      "src": "642:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5638_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5638_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "642:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "642:49:5"
                }
              ]
            },
            "documentation": null,
            "id": 1353,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5265616c20486564676520444149",
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "552:16:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1802adf4415dcebf4866b75185ea31b47258bfaad26e605d987b9a4093ec7337",
                      "typeString": "literal_string \"Real Hedge DAI\""
                    },
                    "value": "Real Hedge DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "72444149",
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "570:6:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_09f0a07dca5370f1547f123214bd5ee760def56eae05f2c89ab132683b7e1ebd",
                      "typeString": "literal_string \"rDAI\""
                    },
                    "value": "rDAI"
                  }
                ],
                "id": 1328,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1325,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5504,
                  "src": "546:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$5504_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "546:31:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1353,
                  "src": "491:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5638",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1320,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5638,
                    "src": "491:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5638",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1353,
                  "src": "503:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITreasury_$2325",
                    "typeString": "contract ITreasury"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1322,
                    "name": "ITreasury",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2325,
                    "src": "503:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreasury_$2325",
                      "typeString": "contract ITreasury"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:32:5"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:5"
            },
            "scope": 1500,
            "src": "479:219:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "746:414:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "764:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "773:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "764:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f736974206d7573742062652067726561746572207468616e2030",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1dfecb3fad5bb2f2ca889220182a9615a266b067f8af9c425f7eb8e6c61aaa0",
                          "typeString": "literal_string \"Deposit must be greater than 0\""
                        },
                        "value": "Deposit must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1dfecb3fad5bb2f2ca889220182a9615a266b067f8af9c425f7eb8e6c61aaa0",
                          "typeString": "literal_string \"Deposit must be greater than 0\""
                        }
                      ],
                      "id": 1358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "756:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "756:53:5"
                },
                {
                  "assignments": [
                    1366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1418,
                      "src": "819:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "835:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "835:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1374,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "888:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "896:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "896:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "870:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2314,
                      "src": "870:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "870:37:5"
                },
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1418,
                      "src": "918:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "918:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "935:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "918:18:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1383,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "950:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "950:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1410,
                    "nodeType": "Block",
                    "src": "1047:72:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1398,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "1061:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1406,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "1102:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1401,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5090,
                                          "src": "1082:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 1402,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1082:13:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1399,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "1071:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1400,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4910,
                                      "src": "1071:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1071:25:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1404,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1070:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4927,
                              "src": "1070:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1070:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1061:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1409,
                        "nodeType": "ExpressionStatement",
                        "src": "1061:47:5"
                      }
                    ]
                  },
                  "id": 1411,
                  "nodeType": "IfStatement",
                  "src": "946:173:5",
                  "trueBody": {
                    "id": 1397,
                    "nodeType": "Block",
                    "src": "962:79:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1386,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "976:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1387,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "985:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "976:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "976:15:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1390,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "1005:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1393,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "1024:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1391,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1355,
                                "src": "1013:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4830,
                              "src": "1013:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1013:17:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1005:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "1005:25:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1134:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1134:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1415,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1380,
                        "src": "1146:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1412,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5380,
                      "src": "1128:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:25:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1419,
                  "src": "721:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:16:5"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:0:5"
            },
            "scope": 1500,
            "src": "704:456:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1209:430:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1425,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "1227:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1236:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1227:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177206d7573742062652067726561746572207468616e2030",
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61d113a3025f4bf0a14af51b238c81732cc4ced5abfcee2b635f6dd7984128b0",
                          "typeString": "literal_string \"Withdraw must be greater than 0\""
                        },
                        "value": "Withdraw must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61d113a3025f4bf0a14af51b238c81732cc4ced5abfcee2b635f6dd7984128b0",
                          "typeString": "literal_string \"Withdraw must be greater than 0\""
                        }
                      ],
                      "id": 1424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1219:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:54:5"
                },
                {
                  "assignments": [
                    1432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "ibalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1284:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1437,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1313:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1313:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1433,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5104,
                      "src": "1303:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1439,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "1342:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1440,
                          "name": "ibalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1432,
                          "src": "1352:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1342:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1362:22:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1334:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "1334:51:5"
                },
                {
                  "assignments": [
                    1446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1446,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1396:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1396:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1450,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1447,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1412:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "1412:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1396:40:5"
                },
                {
                  "assignments": [
                    1452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1452,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1477,
                      "src": "1446:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1446:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1462,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1459,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5090,
                          "src": "1487:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1455,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1421,
                                "src": "1474:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1453,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1446,
                                "src": "1464:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4910,
                              "src": "1464:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1464:17:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1457,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1463:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4927,
                      "src": "1463:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1446:55:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1517:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1517:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "1529:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1463,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5436,
                      "src": "1511:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1468,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1472,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "1613:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1621:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1621:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1596:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "payout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2300,
                      "src": "1596:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:36:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1478,
                  "src": "1184:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:16:5"
            },
            "returnParameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:0:5"
            },
            "scope": 1500,
            "src": "1166:473:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "1707:108:5",
              "statements": [
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1498,
                      "src": "1717:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1488,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1485,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1733:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreasury_$2325",
                          "typeString": "contract ITreasury"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2286,
                      "src": "1733:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1733:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1494,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5090,
                          "src": "1794:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1794:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1784:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1489,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "1774:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4910,
                          "src": "1774:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1774:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4927,
                      "src": "1774:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1497,
                  "nodeType": "Return",
                  "src": "1767:41:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77c7b8fc",
            "id": 1499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:2:5"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "1698:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:9:5"
            },
            "scope": 1500,
            "src": "1645:170:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1501,
        "src": "261:1556:5"
      }
    ],
    "src": "32:1786:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9aCA30bE3aeb4c0765Cd26512FB9762629254C38",
      "transactionHash": "0x60a1c726619812ae2cd8239ea592bcec7a71bf7887b70c68a5c3a09e89df4fe0"
    },
    "1337": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6AE96d668fA25E9aF7d55D1300B8280B29b46EE5",
      "transactionHash": "0xf03c7f3d6a7385db468047598e103ac2ad3c5e88960f72618523a640728b8cac"
    },
    "1601123645090": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC19622266C35f5C50b4809814117dab7837D0b93",
      "transactionHash": "0x1e2faddf347f8a6289c4ee60eea7012f03c22f557b72af144ebe732d804c9fa8"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-09-27T15:52:52.662Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
